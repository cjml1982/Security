// Only compile if ndn-cpp-config.h defines NDN_CPP_HAVE_PROTOBUF = 1.
// This will disappear if someone runs protoc again, but then assume we have Protobuf.
#include <ndn-cpp/ndn-cpp-config.h>
#if NDN_CPP_HAVE_PROTOBUF

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: content-meta-info.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "content-meta-info.pb.h"

// For backwards compatibility with systems that install an older Protobuf (e.g. Ubuntu)),
//   include the older output from protoc so that the sample program compiles.
#if GOOGLE_PROTOBUF_VERSION < 2006000

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ndn_message {

namespace {

const ::google::protobuf::Descriptor* ContentMetaInfoMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ContentMetaInfoMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* ContentMetaInfoMessage_ContentMetaInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ContentMetaInfoMessage_ContentMetaInfo_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_content_2dmeta_2dinfo_2eproto() {
  protobuf_AddDesc_content_2dmeta_2dinfo_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "content-meta-info.proto");
  GOOGLE_CHECK(file != NULL);
  ContentMetaInfoMessage_descriptor_ = file->message_type(0);
  static const int ContentMetaInfoMessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContentMetaInfoMessage, content_meta_info_),
  };
  ContentMetaInfoMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ContentMetaInfoMessage_descriptor_,
      ContentMetaInfoMessage::default_instance_,
      ContentMetaInfoMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContentMetaInfoMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContentMetaInfoMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ContentMetaInfoMessage));
  ContentMetaInfoMessage_ContentMetaInfo_descriptor_ = ContentMetaInfoMessage_descriptor_->nested_type(0);
  static const int ContentMetaInfoMessage_ContentMetaInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContentMetaInfoMessage_ContentMetaInfo, content_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContentMetaInfoMessage_ContentMetaInfo, timestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContentMetaInfoMessage_ContentMetaInfo, has_segments_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContentMetaInfoMessage_ContentMetaInfo, other_),
  };
  ContentMetaInfoMessage_ContentMetaInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ContentMetaInfoMessage_ContentMetaInfo_descriptor_,
      ContentMetaInfoMessage_ContentMetaInfo::default_instance_,
      ContentMetaInfoMessage_ContentMetaInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContentMetaInfoMessage_ContentMetaInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContentMetaInfoMessage_ContentMetaInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ContentMetaInfoMessage_ContentMetaInfo));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_content_2dmeta_2dinfo_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ContentMetaInfoMessage_descriptor_, &ContentMetaInfoMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ContentMetaInfoMessage_ContentMetaInfo_descriptor_, &ContentMetaInfoMessage_ContentMetaInfo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_content_2dmeta_2dinfo_2eproto() {
  delete ContentMetaInfoMessage::default_instance_;
  delete ContentMetaInfoMessage_reflection_;
  delete ContentMetaInfoMessage_ContentMetaInfo::default_instance_;
  delete ContentMetaInfoMessage_ContentMetaInfo_reflection_;
}

void protobuf_AddDesc_content_2dmeta_2dinfo_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027content-meta-info.proto\022\013ndn_message\"\316"
    "\001\n\026ContentMetaInfoMessage\022O\n\021content_met"
    "a_info\030\200\001 \002(\01323.ndn_message.ContentMetaI"
    "nfoMessage.ContentMetaInfo\032c\n\017ContentMet"
    "aInfo\022\025\n\014content_type\030\201\001 \002(\t\022\022\n\ttimestam"
    "p\030\202\001 \002(\004\022\025\n\014has_segments\030\203\001 \002(\010\022\016\n\005other"
    "\030\204\001 \001(\014", 247);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "content-meta-info.proto", &protobuf_RegisterTypes);
  ContentMetaInfoMessage::default_instance_ = new ContentMetaInfoMessage();
  ContentMetaInfoMessage_ContentMetaInfo::default_instance_ = new ContentMetaInfoMessage_ContentMetaInfo();
  ContentMetaInfoMessage::default_instance_->InitAsDefaultInstance();
  ContentMetaInfoMessage_ContentMetaInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_content_2dmeta_2dinfo_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_content_2dmeta_2dinfo_2eproto {
  StaticDescriptorInitializer_content_2dmeta_2dinfo_2eproto() {
    protobuf_AddDesc_content_2dmeta_2dinfo_2eproto();
  }
} static_descriptor_initializer_content_2dmeta_2dinfo_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int ContentMetaInfoMessage_ContentMetaInfo::kContentTypeFieldNumber;
const int ContentMetaInfoMessage_ContentMetaInfo::kTimestampFieldNumber;
const int ContentMetaInfoMessage_ContentMetaInfo::kHasSegmentsFieldNumber;
const int ContentMetaInfoMessage_ContentMetaInfo::kOtherFieldNumber;
#endif  // !_MSC_VER

ContentMetaInfoMessage_ContentMetaInfo::ContentMetaInfoMessage_ContentMetaInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ContentMetaInfoMessage_ContentMetaInfo::InitAsDefaultInstance() {
}

ContentMetaInfoMessage_ContentMetaInfo::ContentMetaInfoMessage_ContentMetaInfo(const ContentMetaInfoMessage_ContentMetaInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ContentMetaInfoMessage_ContentMetaInfo::SharedCtor() {
  _cached_size_ = 0;
  content_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  timestamp_ = GOOGLE_ULONGLONG(0);
  has_segments_ = false;
  other_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ContentMetaInfoMessage_ContentMetaInfo::~ContentMetaInfoMessage_ContentMetaInfo() {
  SharedDtor();
}

void ContentMetaInfoMessage_ContentMetaInfo::SharedDtor() {
  if (content_type_ != &::google::protobuf::internal::kEmptyString) {
    delete content_type_;
  }
  if (other_ != &::google::protobuf::internal::kEmptyString) {
    delete other_;
  }
  if (this != default_instance_) {
  }
}

void ContentMetaInfoMessage_ContentMetaInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ContentMetaInfoMessage_ContentMetaInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ContentMetaInfoMessage_ContentMetaInfo_descriptor_;
}

const ContentMetaInfoMessage_ContentMetaInfo& ContentMetaInfoMessage_ContentMetaInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_content_2dmeta_2dinfo_2eproto();
  return *default_instance_;
}

ContentMetaInfoMessage_ContentMetaInfo* ContentMetaInfoMessage_ContentMetaInfo::default_instance_ = NULL;

ContentMetaInfoMessage_ContentMetaInfo* ContentMetaInfoMessage_ContentMetaInfo::New() const {
  return new ContentMetaInfoMessage_ContentMetaInfo;
}

void ContentMetaInfoMessage_ContentMetaInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_content_type()) {
      if (content_type_ != &::google::protobuf::internal::kEmptyString) {
        content_type_->clear();
      }
    }
    timestamp_ = GOOGLE_ULONGLONG(0);
    has_segments_ = false;
    if (has_other()) {
      if (other_ != &::google::protobuf::internal::kEmptyString) {
        other_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ContentMetaInfoMessage_ContentMetaInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string content_type = 129;
      case 129: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->content_type().data(), this->content_type().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1040)) goto parse_timestamp;
        break;
      }

      // required uint64 timestamp = 130;
      case 130: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_timestamp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));
          set_has_timestamp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1048)) goto parse_has_segments;
        break;
      }

      // required bool has_segments = 131;
      case 131: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_has_segments:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_segments_)));
          set_has_has_segments();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1058)) goto parse_other;
        break;
      }

      // optional bytes other = 132;
      case 132: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_other()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ContentMetaInfoMessage_ContentMetaInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string content_type = 129;
  if (has_content_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->content_type().data(), this->content_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      129, this->content_type(), output);
  }

  // required uint64 timestamp = 130;
  if (has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(130, this->timestamp(), output);
  }

  // required bool has_segments = 131;
  if (has_has_segments()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(131, this->has_segments(), output);
  }

  // optional bytes other = 132;
  if (has_other()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      132, this->other(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ContentMetaInfoMessage_ContentMetaInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string content_type = 129;
  if (has_content_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->content_type().data(), this->content_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        129, this->content_type(), target);
  }

  // required uint64 timestamp = 130;
  if (has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(130, this->timestamp(), target);
  }

  // required bool has_segments = 131;
  if (has_has_segments()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(131, this->has_segments(), target);
  }

  // optional bytes other = 132;
  if (has_other()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        132, this->other(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ContentMetaInfoMessage_ContentMetaInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string content_type = 129;
    if (has_content_type()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->content_type());
    }

    // required uint64 timestamp = 130;
    if (has_timestamp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->timestamp());
    }

    // required bool has_segments = 131;
    if (has_has_segments()) {
      total_size += 2 + 1;
    }

    // optional bytes other = 132;
    if (has_other()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->other());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ContentMetaInfoMessage_ContentMetaInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ContentMetaInfoMessage_ContentMetaInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ContentMetaInfoMessage_ContentMetaInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ContentMetaInfoMessage_ContentMetaInfo::MergeFrom(const ContentMetaInfoMessage_ContentMetaInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_content_type()) {
      set_content_type(from.content_type());
    }
    if (from.has_timestamp()) {
      set_timestamp(from.timestamp());
    }
    if (from.has_has_segments()) {
      set_has_segments(from.has_segments());
    }
    if (from.has_other()) {
      set_other(from.other());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ContentMetaInfoMessage_ContentMetaInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContentMetaInfoMessage_ContentMetaInfo::CopyFrom(const ContentMetaInfoMessage_ContentMetaInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContentMetaInfoMessage_ContentMetaInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void ContentMetaInfoMessage_ContentMetaInfo::Swap(ContentMetaInfoMessage_ContentMetaInfo* other) {
  if (other != this) {
    std::swap(content_type_, other->content_type_);
    std::swap(timestamp_, other->timestamp_);
    std::swap(has_segments_, other->has_segments_);
    std::swap(other_, other->other_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ContentMetaInfoMessage_ContentMetaInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ContentMetaInfoMessage_ContentMetaInfo_descriptor_;
  metadata.reflection = ContentMetaInfoMessage_ContentMetaInfo_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int ContentMetaInfoMessage::kContentMetaInfoFieldNumber;
#endif  // !_MSC_VER

ContentMetaInfoMessage::ContentMetaInfoMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ContentMetaInfoMessage::InitAsDefaultInstance() {
  content_meta_info_ = const_cast< ::ndn_message::ContentMetaInfoMessage_ContentMetaInfo*>(&::ndn_message::ContentMetaInfoMessage_ContentMetaInfo::default_instance());
}

ContentMetaInfoMessage::ContentMetaInfoMessage(const ContentMetaInfoMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ContentMetaInfoMessage::SharedCtor() {
  _cached_size_ = 0;
  content_meta_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ContentMetaInfoMessage::~ContentMetaInfoMessage() {
  SharedDtor();
}

void ContentMetaInfoMessage::SharedDtor() {
  if (this != default_instance_) {
    delete content_meta_info_;
  }
}

void ContentMetaInfoMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ContentMetaInfoMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ContentMetaInfoMessage_descriptor_;
}

const ContentMetaInfoMessage& ContentMetaInfoMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_content_2dmeta_2dinfo_2eproto();
  return *default_instance_;
}

ContentMetaInfoMessage* ContentMetaInfoMessage::default_instance_ = NULL;

ContentMetaInfoMessage* ContentMetaInfoMessage::New() const {
  return new ContentMetaInfoMessage;
}

void ContentMetaInfoMessage::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_content_meta_info()) {
      if (content_meta_info_ != NULL) content_meta_info_->::ndn_message::ContentMetaInfoMessage_ContentMetaInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ContentMetaInfoMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ndn_message.ContentMetaInfoMessage.ContentMetaInfo content_meta_info = 128;
      case 128: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_content_meta_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ContentMetaInfoMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .ndn_message.ContentMetaInfoMessage.ContentMetaInfo content_meta_info = 128;
  if (has_content_meta_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      128, this->content_meta_info(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ContentMetaInfoMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .ndn_message.ContentMetaInfoMessage.ContentMetaInfo content_meta_info = 128;
  if (has_content_meta_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        128, this->content_meta_info(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ContentMetaInfoMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ndn_message.ContentMetaInfoMessage.ContentMetaInfo content_meta_info = 128;
    if (has_content_meta_info()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->content_meta_info());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ContentMetaInfoMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ContentMetaInfoMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ContentMetaInfoMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ContentMetaInfoMessage::MergeFrom(const ContentMetaInfoMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_content_meta_info()) {
      mutable_content_meta_info()->::ndn_message::ContentMetaInfoMessage_ContentMetaInfo::MergeFrom(from.content_meta_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ContentMetaInfoMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContentMetaInfoMessage::CopyFrom(const ContentMetaInfoMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContentMetaInfoMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_content_meta_info()) {
    if (!this->content_meta_info().IsInitialized()) return false;
  }
  return true;
}

void ContentMetaInfoMessage::Swap(ContentMetaInfoMessage* other) {
  if (other != this) {
    std::swap(content_meta_info_, other->content_meta_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ContentMetaInfoMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ContentMetaInfoMessage_descriptor_;
  metadata.reflection = ContentMetaInfoMessage_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ndn_message

// @@protoc_insertion_point(global_scope)

#elif GOOGLE_PROTOBUF_VERSION < 3000000

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ndn_message {

namespace {

const ::google::protobuf::Descriptor* ContentMetaInfoMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ContentMetaInfoMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* ContentMetaInfoMessage_ContentMetaInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ContentMetaInfoMessage_ContentMetaInfo_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_content_2dmeta_2dinfo_2eproto() {
  protobuf_AddDesc_content_2dmeta_2dinfo_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "content-meta-info.proto");
  GOOGLE_CHECK(file != NULL);
  ContentMetaInfoMessage_descriptor_ = file->message_type(0);
  static const int ContentMetaInfoMessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContentMetaInfoMessage, content_meta_info_),
  };
  ContentMetaInfoMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ContentMetaInfoMessage_descriptor_,
      ContentMetaInfoMessage::default_instance_,
      ContentMetaInfoMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContentMetaInfoMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContentMetaInfoMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ContentMetaInfoMessage));
  ContentMetaInfoMessage_ContentMetaInfo_descriptor_ = ContentMetaInfoMessage_descriptor_->nested_type(0);
  static const int ContentMetaInfoMessage_ContentMetaInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContentMetaInfoMessage_ContentMetaInfo, content_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContentMetaInfoMessage_ContentMetaInfo, timestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContentMetaInfoMessage_ContentMetaInfo, has_segments_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContentMetaInfoMessage_ContentMetaInfo, other_),
  };
  ContentMetaInfoMessage_ContentMetaInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ContentMetaInfoMessage_ContentMetaInfo_descriptor_,
      ContentMetaInfoMessage_ContentMetaInfo::default_instance_,
      ContentMetaInfoMessage_ContentMetaInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContentMetaInfoMessage_ContentMetaInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContentMetaInfoMessage_ContentMetaInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ContentMetaInfoMessage_ContentMetaInfo));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_content_2dmeta_2dinfo_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ContentMetaInfoMessage_descriptor_, &ContentMetaInfoMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ContentMetaInfoMessage_ContentMetaInfo_descriptor_, &ContentMetaInfoMessage_ContentMetaInfo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_content_2dmeta_2dinfo_2eproto() {
  delete ContentMetaInfoMessage::default_instance_;
  delete ContentMetaInfoMessage_reflection_;
  delete ContentMetaInfoMessage_ContentMetaInfo::default_instance_;
  delete ContentMetaInfoMessage_ContentMetaInfo_reflection_;
}

void protobuf_AddDesc_content_2dmeta_2dinfo_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027content-meta-info.proto\022\013ndn_message\"\316"
    "\001\n\026ContentMetaInfoMessage\022O\n\021content_met"
    "a_info\030\200\001 \002(\01323.ndn_message.ContentMetaI"
    "nfoMessage.ContentMetaInfo\032c\n\017ContentMet"
    "aInfo\022\025\n\014content_type\030\201\001 \002(\t\022\022\n\ttimestam"
    "p\030\202\001 \002(\004\022\025\n\014has_segments\030\203\001 \002(\010\022\016\n\005other"
    "\030\204\001 \001(\014", 247);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "content-meta-info.proto", &protobuf_RegisterTypes);
  ContentMetaInfoMessage::default_instance_ = new ContentMetaInfoMessage();
  ContentMetaInfoMessage_ContentMetaInfo::default_instance_ = new ContentMetaInfoMessage_ContentMetaInfo();
  ContentMetaInfoMessage::default_instance_->InitAsDefaultInstance();
  ContentMetaInfoMessage_ContentMetaInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_content_2dmeta_2dinfo_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_content_2dmeta_2dinfo_2eproto {
  StaticDescriptorInitializer_content_2dmeta_2dinfo_2eproto() {
    protobuf_AddDesc_content_2dmeta_2dinfo_2eproto();
  }
} static_descriptor_initializer_content_2dmeta_2dinfo_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int ContentMetaInfoMessage_ContentMetaInfo::kContentTypeFieldNumber;
const int ContentMetaInfoMessage_ContentMetaInfo::kTimestampFieldNumber;
const int ContentMetaInfoMessage_ContentMetaInfo::kHasSegmentsFieldNumber;
const int ContentMetaInfoMessage_ContentMetaInfo::kOtherFieldNumber;
#endif  // !_MSC_VER

ContentMetaInfoMessage_ContentMetaInfo::ContentMetaInfoMessage_ContentMetaInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ndn_message.ContentMetaInfoMessage.ContentMetaInfo)
}

void ContentMetaInfoMessage_ContentMetaInfo::InitAsDefaultInstance() {
}

ContentMetaInfoMessage_ContentMetaInfo::ContentMetaInfoMessage_ContentMetaInfo(const ContentMetaInfoMessage_ContentMetaInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ndn_message.ContentMetaInfoMessage.ContentMetaInfo)
}

void ContentMetaInfoMessage_ContentMetaInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  content_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_ = GOOGLE_ULONGLONG(0);
  has_segments_ = false;
  other_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ContentMetaInfoMessage_ContentMetaInfo::~ContentMetaInfoMessage_ContentMetaInfo() {
  // @@protoc_insertion_point(destructor:ndn_message.ContentMetaInfoMessage.ContentMetaInfo)
  SharedDtor();
}

void ContentMetaInfoMessage_ContentMetaInfo::SharedDtor() {
  if (content_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_type_;
  }
  if (other_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete other_;
  }
  if (this != default_instance_) {
  }
}

void ContentMetaInfoMessage_ContentMetaInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ContentMetaInfoMessage_ContentMetaInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ContentMetaInfoMessage_ContentMetaInfo_descriptor_;
}

const ContentMetaInfoMessage_ContentMetaInfo& ContentMetaInfoMessage_ContentMetaInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_content_2dmeta_2dinfo_2eproto();
  return *default_instance_;
}

ContentMetaInfoMessage_ContentMetaInfo* ContentMetaInfoMessage_ContentMetaInfo::default_instance_ = NULL;

ContentMetaInfoMessage_ContentMetaInfo* ContentMetaInfoMessage_ContentMetaInfo::New() const {
  return new ContentMetaInfoMessage_ContentMetaInfo;
}

void ContentMetaInfoMessage_ContentMetaInfo::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    if (has_content_type()) {
      if (content_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        content_type_->clear();
      }
    }
    timestamp_ = GOOGLE_ULONGLONG(0);
    has_segments_ = false;
    if (has_other()) {
      if (other_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        other_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ContentMetaInfoMessage_ContentMetaInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ndn_message.ContentMetaInfoMessage.ContentMetaInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string content_type = 129;
      case 129: {
        if (tag == 1034) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->content_type().data(), this->content_type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "content_type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1040)) goto parse_timestamp;
        break;
      }

      // required uint64 timestamp = 130;
      case 130: {
        if (tag == 1040) {
         parse_timestamp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));
          set_has_timestamp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1048)) goto parse_has_segments;
        break;
      }

      // required bool has_segments = 131;
      case 131: {
        if (tag == 1048) {
         parse_has_segments:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_segments_)));
          set_has_has_segments();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1058)) goto parse_other;
        break;
      }

      // optional bytes other = 132;
      case 132: {
        if (tag == 1058) {
         parse_other:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_other()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ndn_message.ContentMetaInfoMessage.ContentMetaInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ndn_message.ContentMetaInfoMessage.ContentMetaInfo)
  return false;
#undef DO_
}

void ContentMetaInfoMessage_ContentMetaInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ndn_message.ContentMetaInfoMessage.ContentMetaInfo)
  // required string content_type = 129;
  if (has_content_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content_type().data(), this->content_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "content_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      129, this->content_type(), output);
  }

  // required uint64 timestamp = 130;
  if (has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(130, this->timestamp(), output);
  }

  // required bool has_segments = 131;
  if (has_has_segments()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(131, this->has_segments(), output);
  }

  // optional bytes other = 132;
  if (has_other()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      132, this->other(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ndn_message.ContentMetaInfoMessage.ContentMetaInfo)
}

::google::protobuf::uint8* ContentMetaInfoMessage_ContentMetaInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ndn_message.ContentMetaInfoMessage.ContentMetaInfo)
  // required string content_type = 129;
  if (has_content_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content_type().data(), this->content_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "content_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        129, this->content_type(), target);
  }

  // required uint64 timestamp = 130;
  if (has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(130, this->timestamp(), target);
  }

  // required bool has_segments = 131;
  if (has_has_segments()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(131, this->has_segments(), target);
  }

  // optional bytes other = 132;
  if (has_other()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        132, this->other(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ndn_message.ContentMetaInfoMessage.ContentMetaInfo)
  return target;
}

int ContentMetaInfoMessage_ContentMetaInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string content_type = 129;
    if (has_content_type()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->content_type());
    }

    // required uint64 timestamp = 130;
    if (has_timestamp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->timestamp());
    }

    // required bool has_segments = 131;
    if (has_has_segments()) {
      total_size += 2 + 1;
    }

    // optional bytes other = 132;
    if (has_other()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->other());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ContentMetaInfoMessage_ContentMetaInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ContentMetaInfoMessage_ContentMetaInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ContentMetaInfoMessage_ContentMetaInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ContentMetaInfoMessage_ContentMetaInfo::MergeFrom(const ContentMetaInfoMessage_ContentMetaInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_content_type()) {
      set_content_type(from.content_type());
    }
    if (from.has_timestamp()) {
      set_timestamp(from.timestamp());
    }
    if (from.has_has_segments()) {
      set_has_segments(from.has_segments());
    }
    if (from.has_other()) {
      set_other(from.other());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ContentMetaInfoMessage_ContentMetaInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContentMetaInfoMessage_ContentMetaInfo::CopyFrom(const ContentMetaInfoMessage_ContentMetaInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContentMetaInfoMessage_ContentMetaInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void ContentMetaInfoMessage_ContentMetaInfo::Swap(ContentMetaInfoMessage_ContentMetaInfo* other) {
  if (other != this) {
    std::swap(content_type_, other->content_type_);
    std::swap(timestamp_, other->timestamp_);
    std::swap(has_segments_, other->has_segments_);
    std::swap(other_, other->other_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ContentMetaInfoMessage_ContentMetaInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ContentMetaInfoMessage_ContentMetaInfo_descriptor_;
  metadata.reflection = ContentMetaInfoMessage_ContentMetaInfo_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int ContentMetaInfoMessage::kContentMetaInfoFieldNumber;
#endif  // !_MSC_VER

ContentMetaInfoMessage::ContentMetaInfoMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ndn_message.ContentMetaInfoMessage)
}

void ContentMetaInfoMessage::InitAsDefaultInstance() {
  content_meta_info_ = const_cast< ::ndn_message::ContentMetaInfoMessage_ContentMetaInfo*>(&::ndn_message::ContentMetaInfoMessage_ContentMetaInfo::default_instance());
}

ContentMetaInfoMessage::ContentMetaInfoMessage(const ContentMetaInfoMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ndn_message.ContentMetaInfoMessage)
}

void ContentMetaInfoMessage::SharedCtor() {
  _cached_size_ = 0;
  content_meta_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ContentMetaInfoMessage::~ContentMetaInfoMessage() {
  // @@protoc_insertion_point(destructor:ndn_message.ContentMetaInfoMessage)
  SharedDtor();
}

void ContentMetaInfoMessage::SharedDtor() {
  if (this != default_instance_) {
    delete content_meta_info_;
  }
}

void ContentMetaInfoMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ContentMetaInfoMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ContentMetaInfoMessage_descriptor_;
}

const ContentMetaInfoMessage& ContentMetaInfoMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_content_2dmeta_2dinfo_2eproto();
  return *default_instance_;
}

ContentMetaInfoMessage* ContentMetaInfoMessage::default_instance_ = NULL;

ContentMetaInfoMessage* ContentMetaInfoMessage::New() const {
  return new ContentMetaInfoMessage;
}

void ContentMetaInfoMessage::Clear() {
  if (has_content_meta_info()) {
    if (content_meta_info_ != NULL) content_meta_info_->::ndn_message::ContentMetaInfoMessage_ContentMetaInfo::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ContentMetaInfoMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ndn_message.ContentMetaInfoMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ndn_message.ContentMetaInfoMessage.ContentMetaInfo content_meta_info = 128;
      case 128: {
        if (tag == 1026) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_content_meta_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ndn_message.ContentMetaInfoMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ndn_message.ContentMetaInfoMessage)
  return false;
#undef DO_
}

void ContentMetaInfoMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ndn_message.ContentMetaInfoMessage)
  // required .ndn_message.ContentMetaInfoMessage.ContentMetaInfo content_meta_info = 128;
  if (has_content_meta_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      128, this->content_meta_info(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ndn_message.ContentMetaInfoMessage)
}

::google::protobuf::uint8* ContentMetaInfoMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ndn_message.ContentMetaInfoMessage)
  // required .ndn_message.ContentMetaInfoMessage.ContentMetaInfo content_meta_info = 128;
  if (has_content_meta_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        128, this->content_meta_info(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ndn_message.ContentMetaInfoMessage)
  return target;
}

int ContentMetaInfoMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ndn_message.ContentMetaInfoMessage.ContentMetaInfo content_meta_info = 128;
    if (has_content_meta_info()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->content_meta_info());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ContentMetaInfoMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ContentMetaInfoMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ContentMetaInfoMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ContentMetaInfoMessage::MergeFrom(const ContentMetaInfoMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_content_meta_info()) {
      mutable_content_meta_info()->::ndn_message::ContentMetaInfoMessage_ContentMetaInfo::MergeFrom(from.content_meta_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ContentMetaInfoMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContentMetaInfoMessage::CopyFrom(const ContentMetaInfoMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContentMetaInfoMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_content_meta_info()) {
    if (!this->content_meta_info().IsInitialized()) return false;
  }
  return true;
}

void ContentMetaInfoMessage::Swap(ContentMetaInfoMessage* other) {
  if (other != this) {
    std::swap(content_meta_info_, other->content_meta_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ContentMetaInfoMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ContentMetaInfoMessage_descriptor_;
  metadata.reflection = ContentMetaInfoMessage_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ndn_message

// @@protoc_insertion_point(global_scope)

#else // GOOGLE_PROTOBUF_VERSION < 3000000

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ndn_message {

namespace {

const ::google::protobuf::Descriptor* ContentMetaInfoMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ContentMetaInfoMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* ContentMetaInfoMessage_ContentMetaInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ContentMetaInfoMessage_ContentMetaInfo_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_content_2dmeta_2dinfo_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_content_2dmeta_2dinfo_2eproto() {
  protobuf_AddDesc_content_2dmeta_2dinfo_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "content-meta-info.proto");
  GOOGLE_CHECK(file != NULL);
  ContentMetaInfoMessage_descriptor_ = file->message_type(0);
  static const int ContentMetaInfoMessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContentMetaInfoMessage, content_meta_info_),
  };
  ContentMetaInfoMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ContentMetaInfoMessage_descriptor_,
      ContentMetaInfoMessage::default_instance_,
      ContentMetaInfoMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContentMetaInfoMessage, _has_bits_[0]),
      -1,
      -1,
      sizeof(ContentMetaInfoMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContentMetaInfoMessage, _internal_metadata_),
      -1);
  ContentMetaInfoMessage_ContentMetaInfo_descriptor_ = ContentMetaInfoMessage_descriptor_->nested_type(0);
  static const int ContentMetaInfoMessage_ContentMetaInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContentMetaInfoMessage_ContentMetaInfo, content_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContentMetaInfoMessage_ContentMetaInfo, timestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContentMetaInfoMessage_ContentMetaInfo, has_segments_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContentMetaInfoMessage_ContentMetaInfo, other_),
  };
  ContentMetaInfoMessage_ContentMetaInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ContentMetaInfoMessage_ContentMetaInfo_descriptor_,
      ContentMetaInfoMessage_ContentMetaInfo::default_instance_,
      ContentMetaInfoMessage_ContentMetaInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContentMetaInfoMessage_ContentMetaInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(ContentMetaInfoMessage_ContentMetaInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContentMetaInfoMessage_ContentMetaInfo, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_content_2dmeta_2dinfo_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ContentMetaInfoMessage_descriptor_, &ContentMetaInfoMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ContentMetaInfoMessage_ContentMetaInfo_descriptor_, &ContentMetaInfoMessage_ContentMetaInfo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_content_2dmeta_2dinfo_2eproto() {
  delete ContentMetaInfoMessage::default_instance_;
  delete ContentMetaInfoMessage_reflection_;
  delete ContentMetaInfoMessage_ContentMetaInfo::default_instance_;
  delete ContentMetaInfoMessage_ContentMetaInfo_reflection_;
}

void protobuf_AddDesc_content_2dmeta_2dinfo_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_content_2dmeta_2dinfo_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027content-meta-info.proto\022\013ndn_message\"\316"
    "\001\n\026ContentMetaInfoMessage\022O\n\021content_met"
    "a_info\030\200\001 \002(\01323.ndn_message.ContentMetaI"
    "nfoMessage.ContentMetaInfo\032c\n\017ContentMet"
    "aInfo\022\025\n\014content_type\030\201\001 \002(\t\022\022\n\ttimestam"
    "p\030\202\001 \002(\004\022\025\n\014has_segments\030\203\001 \002(\010\022\016\n\005other"
    "\030\204\001 \001(\014", 247);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "content-meta-info.proto", &protobuf_RegisterTypes);
  ContentMetaInfoMessage::default_instance_ = new ContentMetaInfoMessage();
  ContentMetaInfoMessage_ContentMetaInfo::default_instance_ = new ContentMetaInfoMessage_ContentMetaInfo();
  ContentMetaInfoMessage::default_instance_->InitAsDefaultInstance();
  ContentMetaInfoMessage_ContentMetaInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_content_2dmeta_2dinfo_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_content_2dmeta_2dinfo_2eproto {
  StaticDescriptorInitializer_content_2dmeta_2dinfo_2eproto() {
    protobuf_AddDesc_content_2dmeta_2dinfo_2eproto();
  }
} static_descriptor_initializer_content_2dmeta_2dinfo_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ContentMetaInfoMessage_ContentMetaInfo::kContentTypeFieldNumber;
const int ContentMetaInfoMessage_ContentMetaInfo::kTimestampFieldNumber;
const int ContentMetaInfoMessage_ContentMetaInfo::kHasSegmentsFieldNumber;
const int ContentMetaInfoMessage_ContentMetaInfo::kOtherFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ContentMetaInfoMessage_ContentMetaInfo::ContentMetaInfoMessage_ContentMetaInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ndn_message.ContentMetaInfoMessage.ContentMetaInfo)
}

void ContentMetaInfoMessage_ContentMetaInfo::InitAsDefaultInstance() {
}

ContentMetaInfoMessage_ContentMetaInfo::ContentMetaInfoMessage_ContentMetaInfo(const ContentMetaInfoMessage_ContentMetaInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ndn_message.ContentMetaInfoMessage.ContentMetaInfo)
}

void ContentMetaInfoMessage_ContentMetaInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  content_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_ = GOOGLE_ULONGLONG(0);
  has_segments_ = false;
  other_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ContentMetaInfoMessage_ContentMetaInfo::~ContentMetaInfoMessage_ContentMetaInfo() {
  // @@protoc_insertion_point(destructor:ndn_message.ContentMetaInfoMessage.ContentMetaInfo)
  SharedDtor();
}

void ContentMetaInfoMessage_ContentMetaInfo::SharedDtor() {
  content_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  other_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ContentMetaInfoMessage_ContentMetaInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ContentMetaInfoMessage_ContentMetaInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ContentMetaInfoMessage_ContentMetaInfo_descriptor_;
}

const ContentMetaInfoMessage_ContentMetaInfo& ContentMetaInfoMessage_ContentMetaInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_content_2dmeta_2dinfo_2eproto();
  return *default_instance_;
}

ContentMetaInfoMessage_ContentMetaInfo* ContentMetaInfoMessage_ContentMetaInfo::default_instance_ = NULL;

ContentMetaInfoMessage_ContentMetaInfo* ContentMetaInfoMessage_ContentMetaInfo::New(::google::protobuf::Arena* arena) const {
  ContentMetaInfoMessage_ContentMetaInfo* n = new ContentMetaInfoMessage_ContentMetaInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ContentMetaInfoMessage_ContentMetaInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ndn_message.ContentMetaInfoMessage.ContentMetaInfo)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_content_type()) {
      content_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    timestamp_ = GOOGLE_ULONGLONG(0);
    has_segments_ = false;
    if (has_other()) {
      other_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ContentMetaInfoMessage_ContentMetaInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ndn_message.ContentMetaInfoMessage.ContentMetaInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string content_type = 129;
      case 129: {
        if (tag == 1034) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->content_type().data(), this->content_type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ndn_message.ContentMetaInfoMessage.ContentMetaInfo.content_type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1040)) goto parse_timestamp;
        break;
      }

      // required uint64 timestamp = 130;
      case 130: {
        if (tag == 1040) {
         parse_timestamp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));
          set_has_timestamp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1048)) goto parse_has_segments;
        break;
      }

      // required bool has_segments = 131;
      case 131: {
        if (tag == 1048) {
         parse_has_segments:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_segments_)));
          set_has_has_segments();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1058)) goto parse_other;
        break;
      }

      // optional bytes other = 132;
      case 132: {
        if (tag == 1058) {
         parse_other:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_other()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ndn_message.ContentMetaInfoMessage.ContentMetaInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ndn_message.ContentMetaInfoMessage.ContentMetaInfo)
  return false;
#undef DO_
}

void ContentMetaInfoMessage_ContentMetaInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ndn_message.ContentMetaInfoMessage.ContentMetaInfo)
  // required string content_type = 129;
  if (has_content_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content_type().data(), this->content_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ndn_message.ContentMetaInfoMessage.ContentMetaInfo.content_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      129, this->content_type(), output);
  }

  // required uint64 timestamp = 130;
  if (has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(130, this->timestamp(), output);
  }

  // required bool has_segments = 131;
  if (has_has_segments()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(131, this->has_segments(), output);
  }

  // optional bytes other = 132;
  if (has_other()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      132, this->other(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ndn_message.ContentMetaInfoMessage.ContentMetaInfo)
}

::google::protobuf::uint8* ContentMetaInfoMessage_ContentMetaInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ndn_message.ContentMetaInfoMessage.ContentMetaInfo)
  // required string content_type = 129;
  if (has_content_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content_type().data(), this->content_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ndn_message.ContentMetaInfoMessage.ContentMetaInfo.content_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        129, this->content_type(), target);
  }

  // required uint64 timestamp = 130;
  if (has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(130, this->timestamp(), target);
  }

  // required bool has_segments = 131;
  if (has_has_segments()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(131, this->has_segments(), target);
  }

  // optional bytes other = 132;
  if (has_other()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        132, this->other(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ndn_message.ContentMetaInfoMessage.ContentMetaInfo)
  return target;
}

int ContentMetaInfoMessage_ContentMetaInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ndn_message.ContentMetaInfoMessage.ContentMetaInfo)
  int total_size = 0;

  if (has_content_type()) {
    // required string content_type = 129;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content_type());
  }

  if (has_timestamp()) {
    // required uint64 timestamp = 130;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->timestamp());
  }

  if (has_has_segments()) {
    // required bool has_segments = 131;
    total_size += 2 + 1;
  }

  return total_size;
}
int ContentMetaInfoMessage_ContentMetaInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ndn_message.ContentMetaInfoMessage.ContentMetaInfo)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string content_type = 129;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content_type());

    // required uint64 timestamp = 130;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->timestamp());

    // required bool has_segments = 131;
    total_size += 2 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional bytes other = 132;
  if (has_other()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->other());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ContentMetaInfoMessage_ContentMetaInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ndn_message.ContentMetaInfoMessage.ContentMetaInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ContentMetaInfoMessage_ContentMetaInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ContentMetaInfoMessage_ContentMetaInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ndn_message.ContentMetaInfoMessage.ContentMetaInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ndn_message.ContentMetaInfoMessage.ContentMetaInfo)
    MergeFrom(*source);
  }
}

void ContentMetaInfoMessage_ContentMetaInfo::MergeFrom(const ContentMetaInfoMessage_ContentMetaInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ndn_message.ContentMetaInfoMessage.ContentMetaInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_content_type()) {
      set_has_content_type();
      content_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_type_);
    }
    if (from.has_timestamp()) {
      set_timestamp(from.timestamp());
    }
    if (from.has_has_segments()) {
      set_has_segments(from.has_segments());
    }
    if (from.has_other()) {
      set_has_other();
      other_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.other_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ContentMetaInfoMessage_ContentMetaInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ndn_message.ContentMetaInfoMessage.ContentMetaInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContentMetaInfoMessage_ContentMetaInfo::CopyFrom(const ContentMetaInfoMessage_ContentMetaInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ndn_message.ContentMetaInfoMessage.ContentMetaInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContentMetaInfoMessage_ContentMetaInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void ContentMetaInfoMessage_ContentMetaInfo::Swap(ContentMetaInfoMessage_ContentMetaInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ContentMetaInfoMessage_ContentMetaInfo::InternalSwap(ContentMetaInfoMessage_ContentMetaInfo* other) {
  content_type_.Swap(&other->content_type_);
  std::swap(timestamp_, other->timestamp_);
  std::swap(has_segments_, other->has_segments_);
  other_.Swap(&other->other_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ContentMetaInfoMessage_ContentMetaInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ContentMetaInfoMessage_ContentMetaInfo_descriptor_;
  metadata.reflection = ContentMetaInfoMessage_ContentMetaInfo_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ContentMetaInfoMessage::kContentMetaInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ContentMetaInfoMessage::ContentMetaInfoMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ndn_message.ContentMetaInfoMessage)
}

void ContentMetaInfoMessage::InitAsDefaultInstance() {
  content_meta_info_ = const_cast< ::ndn_message::ContentMetaInfoMessage_ContentMetaInfo*>(&::ndn_message::ContentMetaInfoMessage_ContentMetaInfo::default_instance());
}

ContentMetaInfoMessage::ContentMetaInfoMessage(const ContentMetaInfoMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ndn_message.ContentMetaInfoMessage)
}

void ContentMetaInfoMessage::SharedCtor() {
  _cached_size_ = 0;
  content_meta_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ContentMetaInfoMessage::~ContentMetaInfoMessage() {
  // @@protoc_insertion_point(destructor:ndn_message.ContentMetaInfoMessage)
  SharedDtor();
}

void ContentMetaInfoMessage::SharedDtor() {
  if (this != default_instance_) {
    delete content_meta_info_;
  }
}

void ContentMetaInfoMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ContentMetaInfoMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ContentMetaInfoMessage_descriptor_;
}

const ContentMetaInfoMessage& ContentMetaInfoMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_content_2dmeta_2dinfo_2eproto();
  return *default_instance_;
}

ContentMetaInfoMessage* ContentMetaInfoMessage::default_instance_ = NULL;

ContentMetaInfoMessage* ContentMetaInfoMessage::New(::google::protobuf::Arena* arena) const {
  ContentMetaInfoMessage* n = new ContentMetaInfoMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ContentMetaInfoMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:ndn_message.ContentMetaInfoMessage)
  if (has_content_meta_info()) {
    if (content_meta_info_ != NULL) content_meta_info_->::ndn_message::ContentMetaInfoMessage_ContentMetaInfo::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ContentMetaInfoMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ndn_message.ContentMetaInfoMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ndn_message.ContentMetaInfoMessage.ContentMetaInfo content_meta_info = 128;
      case 128: {
        if (tag == 1026) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_content_meta_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ndn_message.ContentMetaInfoMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ndn_message.ContentMetaInfoMessage)
  return false;
#undef DO_
}

void ContentMetaInfoMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ndn_message.ContentMetaInfoMessage)
  // required .ndn_message.ContentMetaInfoMessage.ContentMetaInfo content_meta_info = 128;
  if (has_content_meta_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      128, *this->content_meta_info_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ndn_message.ContentMetaInfoMessage)
}

::google::protobuf::uint8* ContentMetaInfoMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ndn_message.ContentMetaInfoMessage)
  // required .ndn_message.ContentMetaInfoMessage.ContentMetaInfo content_meta_info = 128;
  if (has_content_meta_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        128, *this->content_meta_info_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ndn_message.ContentMetaInfoMessage)
  return target;
}

int ContentMetaInfoMessage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ndn_message.ContentMetaInfoMessage)
  int total_size = 0;

  // required .ndn_message.ContentMetaInfoMessage.ContentMetaInfo content_meta_info = 128;
  if (has_content_meta_info()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->content_meta_info_);
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ContentMetaInfoMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ndn_message.ContentMetaInfoMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ContentMetaInfoMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ContentMetaInfoMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ndn_message.ContentMetaInfoMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ndn_message.ContentMetaInfoMessage)
    MergeFrom(*source);
  }
}

void ContentMetaInfoMessage::MergeFrom(const ContentMetaInfoMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ndn_message.ContentMetaInfoMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_content_meta_info()) {
      mutable_content_meta_info()->::ndn_message::ContentMetaInfoMessage_ContentMetaInfo::MergeFrom(from.content_meta_info());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ContentMetaInfoMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ndn_message.ContentMetaInfoMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContentMetaInfoMessage::CopyFrom(const ContentMetaInfoMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ndn_message.ContentMetaInfoMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContentMetaInfoMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_content_meta_info()) {
    if (!this->content_meta_info_->IsInitialized()) return false;
  }
  return true;
}

void ContentMetaInfoMessage::Swap(ContentMetaInfoMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ContentMetaInfoMessage::InternalSwap(ContentMetaInfoMessage* other) {
  std::swap(content_meta_info_, other->content_meta_info_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ContentMetaInfoMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ContentMetaInfoMessage_descriptor_;
  metadata.reflection = ContentMetaInfoMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ContentMetaInfoMessage_ContentMetaInfo

// required string content_type = 129;
bool ContentMetaInfoMessage_ContentMetaInfo::has_content_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ContentMetaInfoMessage_ContentMetaInfo::set_has_content_type() {
  _has_bits_[0] |= 0x00000001u;
}
void ContentMetaInfoMessage_ContentMetaInfo::clear_has_content_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void ContentMetaInfoMessage_ContentMetaInfo::clear_content_type() {
  content_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content_type();
}
 const ::std::string& ContentMetaInfoMessage_ContentMetaInfo::content_type() const {
  // @@protoc_insertion_point(field_get:ndn_message.ContentMetaInfoMessage.ContentMetaInfo.content_type)
  return content_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ContentMetaInfoMessage_ContentMetaInfo::set_content_type(const ::std::string& value) {
  set_has_content_type();
  content_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ndn_message.ContentMetaInfoMessage.ContentMetaInfo.content_type)
}
 void ContentMetaInfoMessage_ContentMetaInfo::set_content_type(const char* value) {
  set_has_content_type();
  content_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ndn_message.ContentMetaInfoMessage.ContentMetaInfo.content_type)
}
 void ContentMetaInfoMessage_ContentMetaInfo::set_content_type(const char* value, size_t size) {
  set_has_content_type();
  content_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ndn_message.ContentMetaInfoMessage.ContentMetaInfo.content_type)
}
 ::std::string* ContentMetaInfoMessage_ContentMetaInfo::mutable_content_type() {
  set_has_content_type();
  // @@protoc_insertion_point(field_mutable:ndn_message.ContentMetaInfoMessage.ContentMetaInfo.content_type)
  return content_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ContentMetaInfoMessage_ContentMetaInfo::release_content_type() {
  // @@protoc_insertion_point(field_release:ndn_message.ContentMetaInfoMessage.ContentMetaInfo.content_type)
  clear_has_content_type();
  return content_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ContentMetaInfoMessage_ContentMetaInfo::set_allocated_content_type(::std::string* content_type) {
  if (content_type != NULL) {
    set_has_content_type();
  } else {
    clear_has_content_type();
  }
  content_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content_type);
  // @@protoc_insertion_point(field_set_allocated:ndn_message.ContentMetaInfoMessage.ContentMetaInfo.content_type)
}

// required uint64 timestamp = 130;
bool ContentMetaInfoMessage_ContentMetaInfo::has_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ContentMetaInfoMessage_ContentMetaInfo::set_has_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
void ContentMetaInfoMessage_ContentMetaInfo::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
void ContentMetaInfoMessage_ContentMetaInfo::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
  clear_has_timestamp();
}
 ::google::protobuf::uint64 ContentMetaInfoMessage_ContentMetaInfo::timestamp() const {
  // @@protoc_insertion_point(field_get:ndn_message.ContentMetaInfoMessage.ContentMetaInfo.timestamp)
  return timestamp_;
}
 void ContentMetaInfoMessage_ContentMetaInfo::set_timestamp(::google::protobuf::uint64 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:ndn_message.ContentMetaInfoMessage.ContentMetaInfo.timestamp)
}

// required bool has_segments = 131;
bool ContentMetaInfoMessage_ContentMetaInfo::has_has_segments() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ContentMetaInfoMessage_ContentMetaInfo::set_has_has_segments() {
  _has_bits_[0] |= 0x00000004u;
}
void ContentMetaInfoMessage_ContentMetaInfo::clear_has_has_segments() {
  _has_bits_[0] &= ~0x00000004u;
}
void ContentMetaInfoMessage_ContentMetaInfo::clear_has_segments() {
  has_segments_ = false;
  clear_has_has_segments();
}
 bool ContentMetaInfoMessage_ContentMetaInfo::has_segments() const {
  // @@protoc_insertion_point(field_get:ndn_message.ContentMetaInfoMessage.ContentMetaInfo.has_segments)
  return has_segments_;
}
 void ContentMetaInfoMessage_ContentMetaInfo::set_has_segments(bool value) {
  set_has_has_segments();
  has_segments_ = value;
  // @@protoc_insertion_point(field_set:ndn_message.ContentMetaInfoMessage.ContentMetaInfo.has_segments)
}

// optional bytes other = 132;
bool ContentMetaInfoMessage_ContentMetaInfo::has_other() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ContentMetaInfoMessage_ContentMetaInfo::set_has_other() {
  _has_bits_[0] |= 0x00000008u;
}
void ContentMetaInfoMessage_ContentMetaInfo::clear_has_other() {
  _has_bits_[0] &= ~0x00000008u;
}
void ContentMetaInfoMessage_ContentMetaInfo::clear_other() {
  other_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_other();
}
 const ::std::string& ContentMetaInfoMessage_ContentMetaInfo::other() const {
  // @@protoc_insertion_point(field_get:ndn_message.ContentMetaInfoMessage.ContentMetaInfo.other)
  return other_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ContentMetaInfoMessage_ContentMetaInfo::set_other(const ::std::string& value) {
  set_has_other();
  other_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ndn_message.ContentMetaInfoMessage.ContentMetaInfo.other)
}
 void ContentMetaInfoMessage_ContentMetaInfo::set_other(const char* value) {
  set_has_other();
  other_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ndn_message.ContentMetaInfoMessage.ContentMetaInfo.other)
}
 void ContentMetaInfoMessage_ContentMetaInfo::set_other(const void* value, size_t size) {
  set_has_other();
  other_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ndn_message.ContentMetaInfoMessage.ContentMetaInfo.other)
}
 ::std::string* ContentMetaInfoMessage_ContentMetaInfo::mutable_other() {
  set_has_other();
  // @@protoc_insertion_point(field_mutable:ndn_message.ContentMetaInfoMessage.ContentMetaInfo.other)
  return other_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ContentMetaInfoMessage_ContentMetaInfo::release_other() {
  // @@protoc_insertion_point(field_release:ndn_message.ContentMetaInfoMessage.ContentMetaInfo.other)
  clear_has_other();
  return other_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ContentMetaInfoMessage_ContentMetaInfo::set_allocated_other(::std::string* other) {
  if (other != NULL) {
    set_has_other();
  } else {
    clear_has_other();
  }
  other_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), other);
  // @@protoc_insertion_point(field_set_allocated:ndn_message.ContentMetaInfoMessage.ContentMetaInfo.other)
}

// -------------------------------------------------------------------

// ContentMetaInfoMessage

// required .ndn_message.ContentMetaInfoMessage.ContentMetaInfo content_meta_info = 128;
bool ContentMetaInfoMessage::has_content_meta_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ContentMetaInfoMessage::set_has_content_meta_info() {
  _has_bits_[0] |= 0x00000001u;
}
void ContentMetaInfoMessage::clear_has_content_meta_info() {
  _has_bits_[0] &= ~0x00000001u;
}
void ContentMetaInfoMessage::clear_content_meta_info() {
  if (content_meta_info_ != NULL) content_meta_info_->::ndn_message::ContentMetaInfoMessage_ContentMetaInfo::Clear();
  clear_has_content_meta_info();
}
const ::ndn_message::ContentMetaInfoMessage_ContentMetaInfo& ContentMetaInfoMessage::content_meta_info() const {
  // @@protoc_insertion_point(field_get:ndn_message.ContentMetaInfoMessage.content_meta_info)
  return content_meta_info_ != NULL ? *content_meta_info_ : *default_instance_->content_meta_info_;
}
::ndn_message::ContentMetaInfoMessage_ContentMetaInfo* ContentMetaInfoMessage::mutable_content_meta_info() {
  set_has_content_meta_info();
  if (content_meta_info_ == NULL) {
    content_meta_info_ = new ::ndn_message::ContentMetaInfoMessage_ContentMetaInfo;
  }
  // @@protoc_insertion_point(field_mutable:ndn_message.ContentMetaInfoMessage.content_meta_info)
  return content_meta_info_;
}
::ndn_message::ContentMetaInfoMessage_ContentMetaInfo* ContentMetaInfoMessage::release_content_meta_info() {
  // @@protoc_insertion_point(field_release:ndn_message.ContentMetaInfoMessage.content_meta_info)
  clear_has_content_meta_info();
  ::ndn_message::ContentMetaInfoMessage_ContentMetaInfo* temp = content_meta_info_;
  content_meta_info_ = NULL;
  return temp;
}
void ContentMetaInfoMessage::set_allocated_content_meta_info(::ndn_message::ContentMetaInfoMessage_ContentMetaInfo* content_meta_info) {
  delete content_meta_info_;
  content_meta_info_ = content_meta_info;
  if (content_meta_info) {
    set_has_content_meta_info();
  } else {
    clear_has_content_meta_info();
  }
  // @@protoc_insertion_point(field_set_allocated:ndn_message.ContentMetaInfoMessage.content_meta_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace ndn_message

// @@protoc_insertion_point(global_scope)

#endif // GOOGLE_PROTOBUF_VERSION < 3000000

#endif // NDN_CPP_HAVE_PROTOBUF
