// Only compile if ndn-cpp-config.h defines NDN_CPP_HAVE_PROTOBUF = 1.
// This will disappear if someone runs protoc again, but then assume we have Protobuf.
#include <ndn-cpp/ndn-cpp-config.h>
#if NDN_CPP_HAVE_PROTOBUF

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sync-state.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "sync-state.pb.h"

// For backwards compatibility with systems that install an older Protobuf (e.g. Ubuntu)),
//   include the older output from protoc so that the sample program compiles.
#if GOOGLE_PROTOBUF_VERSION < 2005000

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Sync {

namespace {

const ::google::protobuf::Descriptor* SyncState_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SyncState_reflection_ = NULL;
const ::google::protobuf::Descriptor* SyncState_SeqNo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SyncState_SeqNo_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* SyncState_ActionType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* SyncStateMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SyncStateMsg_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_sync_2dstate_2eproto() {
  protobuf_AddDesc_sync_2dstate_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "sync-state.proto");
  GOOGLE_CHECK(file != NULL);
  SyncState_descriptor_ = file->message_type(0);
  static const int SyncState_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncState, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncState, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncState, seqno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncState, application_info_),
  };
  SyncState_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SyncState_descriptor_,
      SyncState::default_instance_,
      SyncState_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncState, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncState, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SyncState));
  SyncState_SeqNo_descriptor_ = SyncState_descriptor_->nested_type(0);
  static const int SyncState_SeqNo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncState_SeqNo, seq_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncState_SeqNo, session_),
  };
  SyncState_SeqNo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SyncState_SeqNo_descriptor_,
      SyncState_SeqNo::default_instance_,
      SyncState_SeqNo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncState_SeqNo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncState_SeqNo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SyncState_SeqNo));
  SyncState_ActionType_descriptor_ = SyncState_descriptor_->enum_type(0);
  SyncStateMsg_descriptor_ = file->message_type(1);
  static const int SyncStateMsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncStateMsg, ss_),
  };
  SyncStateMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SyncStateMsg_descriptor_,
      SyncStateMsg::default_instance_,
      SyncStateMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncStateMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncStateMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SyncStateMsg));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_sync_2dstate_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SyncState_descriptor_, &SyncState::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SyncState_SeqNo_descriptor_, &SyncState_SeqNo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SyncStateMsg_descriptor_, &SyncStateMsg::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_sync_2dstate_2eproto() {
  delete SyncState::default_instance_;
  delete SyncState_reflection_;
  delete SyncState_SeqNo::default_instance_;
  delete SyncState_SeqNo_reflection_;
  delete SyncStateMsg::default_instance_;
  delete SyncStateMsg_reflection_;
}

void protobuf_AddDesc_sync_2dstate_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020sync-state.proto\022\004Sync\"\333\001\n\tSyncState\022\014"
    "\n\004name\030\001 \002(\t\022(\n\004type\030\002 \002(\0162\032.Sync.SyncSt"
    "ate.ActionType\022$\n\005seqno\030\003 \001(\0132\025.Sync.Syn"
    "cState.SeqNo\022\030\n\020application_info\030\004 \001(\014\032%"
    "\n\005SeqNo\022\013\n\003seq\030\001 \002(\004\022\017\n\007session\030\002 \002(\004\"/\n"
    "\nActionType\022\n\n\006UPDATE\020\000\022\n\n\006DELETE\020\001\022\t\n\005O"
    "THER\020\002\"+\n\014SyncStateMsg\022\033\n\002ss\030\001 \003(\0132\017.Syn"
    "c.SyncState", 291);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "sync-state.proto", &protobuf_RegisterTypes);
  SyncState::default_instance_ = new SyncState();
  SyncState_SeqNo::default_instance_ = new SyncState_SeqNo();
  SyncStateMsg::default_instance_ = new SyncStateMsg();
  SyncState::default_instance_->InitAsDefaultInstance();
  SyncState_SeqNo::default_instance_->InitAsDefaultInstance();
  SyncStateMsg::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_sync_2dstate_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_sync_2dstate_2eproto {
  StaticDescriptorInitializer_sync_2dstate_2eproto() {
    protobuf_AddDesc_sync_2dstate_2eproto();
  }
} static_descriptor_initializer_sync_2dstate_2eproto_;


// ===================================================================

const ::google::protobuf::EnumDescriptor* SyncState_ActionType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SyncState_ActionType_descriptor_;
}
bool SyncState_ActionType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const SyncState_ActionType SyncState::UPDATE;
const SyncState_ActionType SyncState::DELETE;
const SyncState_ActionType SyncState::OTHER;
const SyncState_ActionType SyncState::ActionType_MIN;
const SyncState_ActionType SyncState::ActionType_MAX;
const int SyncState::ActionType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int SyncState_SeqNo::kSeqFieldNumber;
const int SyncState_SeqNo::kSessionFieldNumber;
#endif  // !_MSC_VER

SyncState_SeqNo::SyncState_SeqNo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SyncState_SeqNo::InitAsDefaultInstance() {
}

SyncState_SeqNo::SyncState_SeqNo(const SyncState_SeqNo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SyncState_SeqNo::SharedCtor() {
  _cached_size_ = 0;
  seq_ = GOOGLE_ULONGLONG(0);
  session_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SyncState_SeqNo::~SyncState_SeqNo() {
  SharedDtor();
}

void SyncState_SeqNo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SyncState_SeqNo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncState_SeqNo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SyncState_SeqNo_descriptor_;
}

const SyncState_SeqNo& SyncState_SeqNo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sync_2dstate_2eproto();  return *default_instance_;
}

SyncState_SeqNo* SyncState_SeqNo::default_instance_ = NULL;

SyncState_SeqNo* SyncState_SeqNo::New() const {
  return new SyncState_SeqNo;
}

void SyncState_SeqNo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    seq_ = GOOGLE_ULONGLONG(0);
    session_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SyncState_SeqNo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 seq = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &seq_)));
          set_has_seq();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_session;
        break;
      }

      // required uint64 session = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_session:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &session_)));
          set_has_session();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SyncState_SeqNo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint64 seq = 1;
  if (has_seq()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->seq(), output);
  }

  // required uint64 session = 2;
  if (has_session()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->session(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SyncState_SeqNo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint64 seq = 1;
  if (has_seq()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->seq(), target);
  }

  // required uint64 session = 2;
  if (has_session()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->session(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SyncState_SeqNo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint64 seq = 1;
    if (has_seq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->seq());
    }

    // required uint64 session = 2;
    if (has_session()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->session());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncState_SeqNo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SyncState_SeqNo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SyncState_SeqNo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SyncState_SeqNo::MergeFrom(const SyncState_SeqNo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_seq()) {
      set_seq(from.seq());
    }
    if (from.has_session()) {
      set_session(from.session());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SyncState_SeqNo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncState_SeqNo::CopyFrom(const SyncState_SeqNo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncState_SeqNo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void SyncState_SeqNo::Swap(SyncState_SeqNo* other) {
  if (other != this) {
    std::swap(seq_, other->seq_);
    std::swap(session_, other->session_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SyncState_SeqNo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SyncState_SeqNo_descriptor_;
  metadata.reflection = SyncState_SeqNo_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int SyncState::kNameFieldNumber;
const int SyncState::kTypeFieldNumber;
const int SyncState::kSeqnoFieldNumber;
const int SyncState::kApplicationInfoFieldNumber;
#endif  // !_MSC_VER

SyncState::SyncState()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SyncState::InitAsDefaultInstance() {
  seqno_ = const_cast< ::Sync::SyncState_SeqNo*>(&::Sync::SyncState_SeqNo::default_instance());
}

SyncState::SyncState(const SyncState& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SyncState::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  type_ = 0;
  seqno_ = NULL;
  application_info_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SyncState::~SyncState() {
  SharedDtor();
}

void SyncState::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (application_info_ != &::google::protobuf::internal::kEmptyString) {
    delete application_info_;
  }
  if (this != default_instance_) {
    delete seqno_;
  }
}

void SyncState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncState::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SyncState_descriptor_;
}

const SyncState& SyncState::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sync_2dstate_2eproto();  return *default_instance_;
}

SyncState* SyncState::default_instance_ = NULL;

SyncState* SyncState::New() const {
  return new SyncState;
}

void SyncState::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    type_ = 0;
    if (has_seqno()) {
      if (seqno_ != NULL) seqno_->::Sync::SyncState_SeqNo::Clear();
    }
    if (has_application_info()) {
      if (application_info_ != &::google::protobuf::internal::kEmptyString) {
        application_info_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SyncState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // required .Sync.SyncState.ActionType type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Sync::SyncState_ActionType_IsValid(value)) {
            set_type(static_cast< ::Sync::SyncState_ActionType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_seqno;
        break;
      }

      // optional .Sync.SyncState.SeqNo seqno = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_seqno:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_seqno()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_application_info;
        break;
      }

      // optional bytes application_info = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_application_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_application_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SyncState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }

  // required .Sync.SyncState.ActionType type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // optional .Sync.SyncState.SeqNo seqno = 3;
  if (has_seqno()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->seqno(), output);
  }

  // optional bytes application_info = 4;
  if (has_application_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      4, this->application_info(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SyncState::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required .Sync.SyncState.ActionType type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // optional .Sync.SyncState.SeqNo seqno = 3;
  if (has_seqno()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->seqno(), target);
  }

  // optional bytes application_info = 4;
  if (has_application_info()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->application_info(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SyncState::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required .Sync.SyncState.ActionType type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional .Sync.SyncState.SeqNo seqno = 3;
    if (has_seqno()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->seqno());
    }

    // optional bytes application_info = 4;
    if (has_application_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->application_info());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncState::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SyncState* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SyncState*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SyncState::MergeFrom(const SyncState& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_seqno()) {
      mutable_seqno()->::Sync::SyncState_SeqNo::MergeFrom(from.seqno());
    }
    if (from.has_application_info()) {
      set_application_info(from.application_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SyncState::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncState::CopyFrom(const SyncState& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncState::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_seqno()) {
    if (!this->seqno().IsInitialized()) return false;
  }
  return true;
}

void SyncState::Swap(SyncState* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(type_, other->type_);
    std::swap(seqno_, other->seqno_);
    std::swap(application_info_, other->application_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SyncState::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SyncState_descriptor_;
  metadata.reflection = SyncState_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SyncStateMsg::kSsFieldNumber;
#endif  // !_MSC_VER

SyncStateMsg::SyncStateMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SyncStateMsg::InitAsDefaultInstance() {
}

SyncStateMsg::SyncStateMsg(const SyncStateMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SyncStateMsg::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SyncStateMsg::~SyncStateMsg() {
  SharedDtor();
}

void SyncStateMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SyncStateMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncStateMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SyncStateMsg_descriptor_;
}

const SyncStateMsg& SyncStateMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sync_2dstate_2eproto();  return *default_instance_;
}

SyncStateMsg* SyncStateMsg::default_instance_ = NULL;

SyncStateMsg* SyncStateMsg::New() const {
  return new SyncStateMsg;
}

void SyncStateMsg::Clear() {
  ss_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SyncStateMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Sync.SyncState ss = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ss:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_ss()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_ss;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SyncStateMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .Sync.SyncState ss = 1;
  for (int i = 0; i < this->ss_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->ss(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SyncStateMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .Sync.SyncState ss = 1;
  for (int i = 0; i < this->ss_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->ss(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SyncStateMsg::ByteSize() const {
  int total_size = 0;

  // repeated .Sync.SyncState ss = 1;
  total_size += 1 * this->ss_size();
  for (int i = 0; i < this->ss_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->ss(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncStateMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SyncStateMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SyncStateMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SyncStateMsg::MergeFrom(const SyncStateMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  ss_.MergeFrom(from.ss_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SyncStateMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncStateMsg::CopyFrom(const SyncStateMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncStateMsg::IsInitialized() const {

  for (int i = 0; i < ss_size(); i++) {
    if (!this->ss(i).IsInitialized()) return false;
  }
  return true;
}

void SyncStateMsg::Swap(SyncStateMsg* other) {
  if (other != this) {
    ss_.Swap(&other->ss_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SyncStateMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SyncStateMsg_descriptor_;
  metadata.reflection = SyncStateMsg_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Sync

// @@protoc_insertion_point(global_scope)

#elif GOOGLE_PROTOBUF_VERSION < 2006000

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Sync {

namespace {

const ::google::protobuf::Descriptor* SyncState_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SyncState_reflection_ = NULL;
const ::google::protobuf::Descriptor* SyncState_SeqNo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SyncState_SeqNo_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* SyncState_ActionType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* SyncStateMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SyncStateMsg_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_sync_2dstate_2eproto() {
  protobuf_AddDesc_sync_2dstate_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "sync-state.proto");
  GOOGLE_CHECK(file != NULL);
  SyncState_descriptor_ = file->message_type(0);
  static const int SyncState_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncState, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncState, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncState, seqno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncState, application_info_),
  };
  SyncState_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SyncState_descriptor_,
      SyncState::default_instance_,
      SyncState_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncState, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncState, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SyncState));
  SyncState_SeqNo_descriptor_ = SyncState_descriptor_->nested_type(0);
  static const int SyncState_SeqNo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncState_SeqNo, seq_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncState_SeqNo, session_),
  };
  SyncState_SeqNo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SyncState_SeqNo_descriptor_,
      SyncState_SeqNo::default_instance_,
      SyncState_SeqNo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncState_SeqNo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncState_SeqNo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SyncState_SeqNo));
  SyncState_ActionType_descriptor_ = SyncState_descriptor_->enum_type(0);
  SyncStateMsg_descriptor_ = file->message_type(1);
  static const int SyncStateMsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncStateMsg, ss_),
  };
  SyncStateMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SyncStateMsg_descriptor_,
      SyncStateMsg::default_instance_,
      SyncStateMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncStateMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncStateMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SyncStateMsg));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_sync_2dstate_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SyncState_descriptor_, &SyncState::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SyncState_SeqNo_descriptor_, &SyncState_SeqNo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SyncStateMsg_descriptor_, &SyncStateMsg::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_sync_2dstate_2eproto() {
  delete SyncState::default_instance_;
  delete SyncState_reflection_;
  delete SyncState_SeqNo::default_instance_;
  delete SyncState_SeqNo_reflection_;
  delete SyncStateMsg::default_instance_;
  delete SyncStateMsg_reflection_;
}

void protobuf_AddDesc_sync_2dstate_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020sync-state.proto\022\004Sync\"\333\001\n\tSyncState\022\014"
    "\n\004name\030\001 \002(\t\022(\n\004type\030\002 \002(\0162\032.Sync.SyncSt"
    "ate.ActionType\022$\n\005seqno\030\003 \001(\0132\025.Sync.Syn"
    "cState.SeqNo\022\030\n\020application_info\030\004 \001(\014\032%"
    "\n\005SeqNo\022\013\n\003seq\030\001 \002(\004\022\017\n\007session\030\002 \002(\004\"/\n"
    "\nActionType\022\n\n\006UPDATE\020\000\022\n\n\006DELETE\020\001\022\t\n\005O"
    "THER\020\002\"+\n\014SyncStateMsg\022\033\n\002ss\030\001 \003(\0132\017.Syn"
    "c.SyncState", 291);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "sync-state.proto", &protobuf_RegisterTypes);
  SyncState::default_instance_ = new SyncState();
  SyncState_SeqNo::default_instance_ = new SyncState_SeqNo();
  SyncStateMsg::default_instance_ = new SyncStateMsg();
  SyncState::default_instance_->InitAsDefaultInstance();
  SyncState_SeqNo::default_instance_->InitAsDefaultInstance();
  SyncStateMsg::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_sync_2dstate_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_sync_2dstate_2eproto {
  StaticDescriptorInitializer_sync_2dstate_2eproto() {
    protobuf_AddDesc_sync_2dstate_2eproto();
  }
} static_descriptor_initializer_sync_2dstate_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* SyncState_ActionType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SyncState_ActionType_descriptor_;
}
bool SyncState_ActionType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const SyncState_ActionType SyncState::UPDATE;
const SyncState_ActionType SyncState::DELETE;
const SyncState_ActionType SyncState::OTHER;
const SyncState_ActionType SyncState::ActionType_MIN;
const SyncState_ActionType SyncState::ActionType_MAX;
const int SyncState::ActionType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int SyncState_SeqNo::kSeqFieldNumber;
const int SyncState_SeqNo::kSessionFieldNumber;
#endif  // !_MSC_VER

SyncState_SeqNo::SyncState_SeqNo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SyncState_SeqNo::InitAsDefaultInstance() {
}

SyncState_SeqNo::SyncState_SeqNo(const SyncState_SeqNo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SyncState_SeqNo::SharedCtor() {
  _cached_size_ = 0;
  seq_ = GOOGLE_ULONGLONG(0);
  session_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SyncState_SeqNo::~SyncState_SeqNo() {
  SharedDtor();
}

void SyncState_SeqNo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SyncState_SeqNo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncState_SeqNo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SyncState_SeqNo_descriptor_;
}

const SyncState_SeqNo& SyncState_SeqNo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sync_2dstate_2eproto();
  return *default_instance_;
}

SyncState_SeqNo* SyncState_SeqNo::default_instance_ = NULL;

SyncState_SeqNo* SyncState_SeqNo::New() const {
  return new SyncState_SeqNo;
}

void SyncState_SeqNo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    seq_ = GOOGLE_ULONGLONG(0);
    session_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SyncState_SeqNo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 seq = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &seq_)));
          set_has_seq();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_session;
        break;
      }

      // required uint64 session = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_session:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &session_)));
          set_has_session();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SyncState_SeqNo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint64 seq = 1;
  if (has_seq()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->seq(), output);
  }

  // required uint64 session = 2;
  if (has_session()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->session(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SyncState_SeqNo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint64 seq = 1;
  if (has_seq()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->seq(), target);
  }

  // required uint64 session = 2;
  if (has_session()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->session(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SyncState_SeqNo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint64 seq = 1;
    if (has_seq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->seq());
    }

    // required uint64 session = 2;
    if (has_session()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->session());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncState_SeqNo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SyncState_SeqNo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SyncState_SeqNo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SyncState_SeqNo::MergeFrom(const SyncState_SeqNo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_seq()) {
      set_seq(from.seq());
    }
    if (from.has_session()) {
      set_session(from.session());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SyncState_SeqNo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncState_SeqNo::CopyFrom(const SyncState_SeqNo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncState_SeqNo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void SyncState_SeqNo::Swap(SyncState_SeqNo* other) {
  if (other != this) {
    std::swap(seq_, other->seq_);
    std::swap(session_, other->session_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SyncState_SeqNo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SyncState_SeqNo_descriptor_;
  metadata.reflection = SyncState_SeqNo_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int SyncState::kNameFieldNumber;
const int SyncState::kTypeFieldNumber;
const int SyncState::kSeqnoFieldNumber;
const int SyncState::kApplicationInfoFieldNumber;
#endif  // !_MSC_VER

SyncState::SyncState()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SyncState::InitAsDefaultInstance() {
  seqno_ = const_cast< ::Sync::SyncState_SeqNo*>(&::Sync::SyncState_SeqNo::default_instance());
}

SyncState::SyncState(const SyncState& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SyncState::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  type_ = 0;
  seqno_ = NULL;
  application_info_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SyncState::~SyncState() {
  SharedDtor();
}

void SyncState::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (application_info_ != &::google::protobuf::internal::kEmptyString) {
    delete application_info_;
  }
  if (this != default_instance_) {
    delete seqno_;
  }
}

void SyncState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncState::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SyncState_descriptor_;
}

const SyncState& SyncState::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sync_2dstate_2eproto();
  return *default_instance_;
}

SyncState* SyncState::default_instance_ = NULL;

SyncState* SyncState::New() const {
  return new SyncState;
}

void SyncState::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    type_ = 0;
    if (has_seqno()) {
      if (seqno_ != NULL) seqno_->::Sync::SyncState_SeqNo::Clear();
    }
    if (has_application_info()) {
      if (application_info_ != &::google::protobuf::internal::kEmptyString) {
        application_info_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SyncState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // required .Sync.SyncState.ActionType type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Sync::SyncState_ActionType_IsValid(value)) {
            set_type(static_cast< ::Sync::SyncState_ActionType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_seqno;
        break;
      }

      // optional .Sync.SyncState.SeqNo seqno = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_seqno:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_seqno()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_application_info;
        break;
      }

      // optional bytes application_info = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_application_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_application_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SyncState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }

  // required .Sync.SyncState.ActionType type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // optional .Sync.SyncState.SeqNo seqno = 3;
  if (has_seqno()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->seqno(), output);
  }

  // optional bytes application_info = 4;
  if (has_application_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      4, this->application_info(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SyncState::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required .Sync.SyncState.ActionType type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // optional .Sync.SyncState.SeqNo seqno = 3;
  if (has_seqno()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->seqno(), target);
  }

  // optional bytes application_info = 4;
  if (has_application_info()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->application_info(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SyncState::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required .Sync.SyncState.ActionType type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional .Sync.SyncState.SeqNo seqno = 3;
    if (has_seqno()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->seqno());
    }

    // optional bytes application_info = 4;
    if (has_application_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->application_info());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncState::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SyncState* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SyncState*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SyncState::MergeFrom(const SyncState& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_seqno()) {
      mutable_seqno()->::Sync::SyncState_SeqNo::MergeFrom(from.seqno());
    }
    if (from.has_application_info()) {
      set_application_info(from.application_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SyncState::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncState::CopyFrom(const SyncState& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncState::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_seqno()) {
    if (!this->seqno().IsInitialized()) return false;
  }
  return true;
}

void SyncState::Swap(SyncState* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(type_, other->type_);
    std::swap(seqno_, other->seqno_);
    std::swap(application_info_, other->application_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SyncState::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SyncState_descriptor_;
  metadata.reflection = SyncState_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SyncStateMsg::kSsFieldNumber;
#endif  // !_MSC_VER

SyncStateMsg::SyncStateMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SyncStateMsg::InitAsDefaultInstance() {
}

SyncStateMsg::SyncStateMsg(const SyncStateMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SyncStateMsg::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SyncStateMsg::~SyncStateMsg() {
  SharedDtor();
}

void SyncStateMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SyncStateMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncStateMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SyncStateMsg_descriptor_;
}

const SyncStateMsg& SyncStateMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sync_2dstate_2eproto();
  return *default_instance_;
}

SyncStateMsg* SyncStateMsg::default_instance_ = NULL;

SyncStateMsg* SyncStateMsg::New() const {
  return new SyncStateMsg;
}

void SyncStateMsg::Clear() {
  ss_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SyncStateMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Sync.SyncState ss = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ss:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_ss()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_ss;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SyncStateMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .Sync.SyncState ss = 1;
  for (int i = 0; i < this->ss_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->ss(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SyncStateMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .Sync.SyncState ss = 1;
  for (int i = 0; i < this->ss_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->ss(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SyncStateMsg::ByteSize() const {
  int total_size = 0;

  // repeated .Sync.SyncState ss = 1;
  total_size += 1 * this->ss_size();
  for (int i = 0; i < this->ss_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->ss(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncStateMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SyncStateMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SyncStateMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SyncStateMsg::MergeFrom(const SyncStateMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  ss_.MergeFrom(from.ss_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SyncStateMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncStateMsg::CopyFrom(const SyncStateMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncStateMsg::IsInitialized() const {

  for (int i = 0; i < ss_size(); i++) {
    if (!this->ss(i).IsInitialized()) return false;
  }
  return true;
}

void SyncStateMsg::Swap(SyncStateMsg* other) {
  if (other != this) {
    ss_.Swap(&other->ss_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SyncStateMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SyncStateMsg_descriptor_;
  metadata.reflection = SyncStateMsg_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Sync

// @@protoc_insertion_point(global_scope)

#elif GOOGLE_PROTOBUF_VERSION < 3000000

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Sync {

namespace {

const ::google::protobuf::Descriptor* SyncState_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SyncState_reflection_ = NULL;
const ::google::protobuf::Descriptor* SyncState_SeqNo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SyncState_SeqNo_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* SyncState_ActionType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* SyncStateMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SyncStateMsg_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_sync_2dstate_2eproto() {
  protobuf_AddDesc_sync_2dstate_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "sync-state.proto");
  GOOGLE_CHECK(file != NULL);
  SyncState_descriptor_ = file->message_type(0);
  static const int SyncState_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncState, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncState, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncState, seqno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncState, application_info_),
  };
  SyncState_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SyncState_descriptor_,
      SyncState::default_instance_,
      SyncState_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncState, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncState, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SyncState));
  SyncState_SeqNo_descriptor_ = SyncState_descriptor_->nested_type(0);
  static const int SyncState_SeqNo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncState_SeqNo, seq_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncState_SeqNo, session_),
  };
  SyncState_SeqNo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SyncState_SeqNo_descriptor_,
      SyncState_SeqNo::default_instance_,
      SyncState_SeqNo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncState_SeqNo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncState_SeqNo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SyncState_SeqNo));
  SyncState_ActionType_descriptor_ = SyncState_descriptor_->enum_type(0);
  SyncStateMsg_descriptor_ = file->message_type(1);
  static const int SyncStateMsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncStateMsg, ss_),
  };
  SyncStateMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SyncStateMsg_descriptor_,
      SyncStateMsg::default_instance_,
      SyncStateMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncStateMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncStateMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SyncStateMsg));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_sync_2dstate_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SyncState_descriptor_, &SyncState::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SyncState_SeqNo_descriptor_, &SyncState_SeqNo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SyncStateMsg_descriptor_, &SyncStateMsg::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_sync_2dstate_2eproto() {
  delete SyncState::default_instance_;
  delete SyncState_reflection_;
  delete SyncState_SeqNo::default_instance_;
  delete SyncState_SeqNo_reflection_;
  delete SyncStateMsg::default_instance_;
  delete SyncStateMsg_reflection_;
}

void protobuf_AddDesc_sync_2dstate_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020sync-state.proto\022\004Sync\"\333\001\n\tSyncState\022\014"
    "\n\004name\030\001 \002(\t\022(\n\004type\030\002 \002(\0162\032.Sync.SyncSt"
    "ate.ActionType\022$\n\005seqno\030\003 \001(\0132\025.Sync.Syn"
    "cState.SeqNo\022\030\n\020application_info\030\004 \001(\014\032%"
    "\n\005SeqNo\022\013\n\003seq\030\001 \002(\004\022\017\n\007session\030\002 \002(\004\"/\n"
    "\nActionType\022\n\n\006UPDATE\020\000\022\n\n\006DELETE\020\001\022\t\n\005O"
    "THER\020\002\"+\n\014SyncStateMsg\022\033\n\002ss\030\001 \003(\0132\017.Syn"
    "c.SyncState", 291);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "sync-state.proto", &protobuf_RegisterTypes);
  SyncState::default_instance_ = new SyncState();
  SyncState_SeqNo::default_instance_ = new SyncState_SeqNo();
  SyncStateMsg::default_instance_ = new SyncStateMsg();
  SyncState::default_instance_->InitAsDefaultInstance();
  SyncState_SeqNo::default_instance_->InitAsDefaultInstance();
  SyncStateMsg::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_sync_2dstate_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_sync_2dstate_2eproto {
  StaticDescriptorInitializer_sync_2dstate_2eproto() {
    protobuf_AddDesc_sync_2dstate_2eproto();
  }
} static_descriptor_initializer_sync_2dstate_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* SyncState_ActionType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SyncState_ActionType_descriptor_;
}
bool SyncState_ActionType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const SyncState_ActionType SyncState::UPDATE;
const SyncState_ActionType SyncState::DELETE;
const SyncState_ActionType SyncState::OTHER;
const SyncState_ActionType SyncState::ActionType_MIN;
const SyncState_ActionType SyncState::ActionType_MAX;
const int SyncState::ActionType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int SyncState_SeqNo::kSeqFieldNumber;
const int SyncState_SeqNo::kSessionFieldNumber;
#endif  // !_MSC_VER

SyncState_SeqNo::SyncState_SeqNo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Sync.SyncState.SeqNo)
}

void SyncState_SeqNo::InitAsDefaultInstance() {
}

SyncState_SeqNo::SyncState_SeqNo(const SyncState_SeqNo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Sync.SyncState.SeqNo)
}

void SyncState_SeqNo::SharedCtor() {
  _cached_size_ = 0;
  seq_ = GOOGLE_ULONGLONG(0);
  session_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SyncState_SeqNo::~SyncState_SeqNo() {
  // @@protoc_insertion_point(destructor:Sync.SyncState.SeqNo)
  SharedDtor();
}

void SyncState_SeqNo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SyncState_SeqNo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncState_SeqNo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SyncState_SeqNo_descriptor_;
}

const SyncState_SeqNo& SyncState_SeqNo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sync_2dstate_2eproto();
  return *default_instance_;
}

SyncState_SeqNo* SyncState_SeqNo::default_instance_ = NULL;

SyncState_SeqNo* SyncState_SeqNo::New() const {
  return new SyncState_SeqNo;
}

void SyncState_SeqNo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<SyncState_SeqNo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(seq_, session_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SyncState_SeqNo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Sync.SyncState.SeqNo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 seq = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &seq_)));
          set_has_seq();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_session;
        break;
      }

      // required uint64 session = 2;
      case 2: {
        if (tag == 16) {
         parse_session:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &session_)));
          set_has_session();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Sync.SyncState.SeqNo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Sync.SyncState.SeqNo)
  return false;
#undef DO_
}

void SyncState_SeqNo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Sync.SyncState.SeqNo)
  // required uint64 seq = 1;
  if (has_seq()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->seq(), output);
  }

  // required uint64 session = 2;
  if (has_session()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->session(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Sync.SyncState.SeqNo)
}

::google::protobuf::uint8* SyncState_SeqNo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Sync.SyncState.SeqNo)
  // required uint64 seq = 1;
  if (has_seq()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->seq(), target);
  }

  // required uint64 session = 2;
  if (has_session()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->session(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Sync.SyncState.SeqNo)
  return target;
}

int SyncState_SeqNo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint64 seq = 1;
    if (has_seq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->seq());
    }

    // required uint64 session = 2;
    if (has_session()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->session());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncState_SeqNo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SyncState_SeqNo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SyncState_SeqNo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SyncState_SeqNo::MergeFrom(const SyncState_SeqNo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_seq()) {
      set_seq(from.seq());
    }
    if (from.has_session()) {
      set_session(from.session());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SyncState_SeqNo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncState_SeqNo::CopyFrom(const SyncState_SeqNo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncState_SeqNo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void SyncState_SeqNo::Swap(SyncState_SeqNo* other) {
  if (other != this) {
    std::swap(seq_, other->seq_);
    std::swap(session_, other->session_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SyncState_SeqNo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SyncState_SeqNo_descriptor_;
  metadata.reflection = SyncState_SeqNo_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int SyncState::kNameFieldNumber;
const int SyncState::kTypeFieldNumber;
const int SyncState::kSeqnoFieldNumber;
const int SyncState::kApplicationInfoFieldNumber;
#endif  // !_MSC_VER

SyncState::SyncState()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Sync.SyncState)
}

void SyncState::InitAsDefaultInstance() {
  seqno_ = const_cast< ::Sync::SyncState_SeqNo*>(&::Sync::SyncState_SeqNo::default_instance());
}

SyncState::SyncState(const SyncState& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Sync.SyncState)
}

void SyncState::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  seqno_ = NULL;
  application_info_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SyncState::~SyncState() {
  // @@protoc_insertion_point(destructor:Sync.SyncState)
  SharedDtor();
}

void SyncState::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (application_info_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete application_info_;
  }
  if (this != default_instance_) {
    delete seqno_;
  }
}

void SyncState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncState::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SyncState_descriptor_;
}

const SyncState& SyncState::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sync_2dstate_2eproto();
  return *default_instance_;
}

SyncState* SyncState::default_instance_ = NULL;

SyncState* SyncState::New() const {
  return new SyncState;
}

void SyncState::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    type_ = 0;
    if (has_seqno()) {
      if (seqno_ != NULL) seqno_->::Sync::SyncState_SeqNo::Clear();
    }
    if (has_application_info()) {
      if (application_info_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        application_info_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SyncState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Sync.SyncState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // required .Sync.SyncState.ActionType type = 2;
      case 2: {
        if (tag == 16) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Sync::SyncState_ActionType_IsValid(value)) {
            set_type(static_cast< ::Sync::SyncState_ActionType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_seqno;
        break;
      }

      // optional .Sync.SyncState.SeqNo seqno = 3;
      case 3: {
        if (tag == 26) {
         parse_seqno:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_seqno()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_application_info;
        break;
      }

      // optional bytes application_info = 4;
      case 4: {
        if (tag == 34) {
         parse_application_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_application_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Sync.SyncState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Sync.SyncState)
  return false;
#undef DO_
}

void SyncState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Sync.SyncState)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required .Sync.SyncState.ActionType type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // optional .Sync.SyncState.SeqNo seqno = 3;
  if (has_seqno()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->seqno(), output);
  }

  // optional bytes application_info = 4;
  if (has_application_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->application_info(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Sync.SyncState)
}

::google::protobuf::uint8* SyncState::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Sync.SyncState)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required .Sync.SyncState.ActionType type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // optional .Sync.SyncState.SeqNo seqno = 3;
  if (has_seqno()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->seqno(), target);
  }

  // optional bytes application_info = 4;
  if (has_application_info()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->application_info(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Sync.SyncState)
  return target;
}

int SyncState::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required .Sync.SyncState.ActionType type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional .Sync.SyncState.SeqNo seqno = 3;
    if (has_seqno()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->seqno());
    }

    // optional bytes application_info = 4;
    if (has_application_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->application_info());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncState::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SyncState* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SyncState*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SyncState::MergeFrom(const SyncState& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_seqno()) {
      mutable_seqno()->::Sync::SyncState_SeqNo::MergeFrom(from.seqno());
    }
    if (from.has_application_info()) {
      set_application_info(from.application_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SyncState::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncState::CopyFrom(const SyncState& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncState::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_seqno()) {
    if (!this->seqno().IsInitialized()) return false;
  }
  return true;
}

void SyncState::Swap(SyncState* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(type_, other->type_);
    std::swap(seqno_, other->seqno_);
    std::swap(application_info_, other->application_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SyncState::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SyncState_descriptor_;
  metadata.reflection = SyncState_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SyncStateMsg::kSsFieldNumber;
#endif  // !_MSC_VER

SyncStateMsg::SyncStateMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Sync.SyncStateMsg)
}

void SyncStateMsg::InitAsDefaultInstance() {
}

SyncStateMsg::SyncStateMsg(const SyncStateMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Sync.SyncStateMsg)
}

void SyncStateMsg::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SyncStateMsg::~SyncStateMsg() {
  // @@protoc_insertion_point(destructor:Sync.SyncStateMsg)
  SharedDtor();
}

void SyncStateMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SyncStateMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncStateMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SyncStateMsg_descriptor_;
}

const SyncStateMsg& SyncStateMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sync_2dstate_2eproto();
  return *default_instance_;
}

SyncStateMsg* SyncStateMsg::default_instance_ = NULL;

SyncStateMsg* SyncStateMsg::New() const {
  return new SyncStateMsg;
}

void SyncStateMsg::Clear() {
  ss_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SyncStateMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Sync.SyncStateMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Sync.SyncState ss = 1;
      case 1: {
        if (tag == 10) {
         parse_ss:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_ss()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ss;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Sync.SyncStateMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Sync.SyncStateMsg)
  return false;
#undef DO_
}

void SyncStateMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Sync.SyncStateMsg)
  // repeated .Sync.SyncState ss = 1;
  for (int i = 0; i < this->ss_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->ss(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Sync.SyncStateMsg)
}

::google::protobuf::uint8* SyncStateMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Sync.SyncStateMsg)
  // repeated .Sync.SyncState ss = 1;
  for (int i = 0; i < this->ss_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->ss(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Sync.SyncStateMsg)
  return target;
}

int SyncStateMsg::ByteSize() const {
  int total_size = 0;

  // repeated .Sync.SyncState ss = 1;
  total_size += 1 * this->ss_size();
  for (int i = 0; i < this->ss_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->ss(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncStateMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SyncStateMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SyncStateMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SyncStateMsg::MergeFrom(const SyncStateMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  ss_.MergeFrom(from.ss_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SyncStateMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncStateMsg::CopyFrom(const SyncStateMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncStateMsg::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->ss())) return false;
  return true;
}

void SyncStateMsg::Swap(SyncStateMsg* other) {
  if (other != this) {
    ss_.Swap(&other->ss_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SyncStateMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SyncStateMsg_descriptor_;
  metadata.reflection = SyncStateMsg_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Sync

// @@protoc_insertion_point(global_scope)

#else // GOOGLE_PROTOBUF_VERSION < 3000000

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Sync {

namespace {

const ::google::protobuf::Descriptor* SyncState_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SyncState_reflection_ = NULL;
const ::google::protobuf::Descriptor* SyncState_SeqNo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SyncState_SeqNo_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* SyncState_ActionType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* SyncStateMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SyncStateMsg_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_sync_2dstate_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_sync_2dstate_2eproto() {
  protobuf_AddDesc_sync_2dstate_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "sync-state.proto");
  GOOGLE_CHECK(file != NULL);
  SyncState_descriptor_ = file->message_type(0);
  static const int SyncState_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncState, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncState, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncState, seqno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncState, application_info_),
  };
  SyncState_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SyncState_descriptor_,
      SyncState::default_instance_,
      SyncState_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncState, _has_bits_[0]),
      -1,
      -1,
      sizeof(SyncState),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncState, _internal_metadata_),
      -1);
  SyncState_SeqNo_descriptor_ = SyncState_descriptor_->nested_type(0);
  static const int SyncState_SeqNo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncState_SeqNo, seq_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncState_SeqNo, session_),
  };
  SyncState_SeqNo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SyncState_SeqNo_descriptor_,
      SyncState_SeqNo::default_instance_,
      SyncState_SeqNo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncState_SeqNo, _has_bits_[0]),
      -1,
      -1,
      sizeof(SyncState_SeqNo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncState_SeqNo, _internal_metadata_),
      -1);
  SyncState_ActionType_descriptor_ = SyncState_descriptor_->enum_type(0);
  SyncStateMsg_descriptor_ = file->message_type(1);
  static const int SyncStateMsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncStateMsg, ss_),
  };
  SyncStateMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SyncStateMsg_descriptor_,
      SyncStateMsg::default_instance_,
      SyncStateMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncStateMsg, _has_bits_[0]),
      -1,
      -1,
      sizeof(SyncStateMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncStateMsg, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_sync_2dstate_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SyncState_descriptor_, &SyncState::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SyncState_SeqNo_descriptor_, &SyncState_SeqNo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SyncStateMsg_descriptor_, &SyncStateMsg::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_sync_2dstate_2eproto() {
  delete SyncState::default_instance_;
  delete SyncState_reflection_;
  delete SyncState_SeqNo::default_instance_;
  delete SyncState_SeqNo_reflection_;
  delete SyncStateMsg::default_instance_;
  delete SyncStateMsg_reflection_;
}

void protobuf_AddDesc_sync_2dstate_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_sync_2dstate_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020sync-state.proto\022\004Sync\"\333\001\n\tSyncState\022\014"
    "\n\004name\030\001 \002(\t\022(\n\004type\030\002 \002(\0162\032.Sync.SyncSt"
    "ate.ActionType\022$\n\005seqno\030\003 \001(\0132\025.Sync.Syn"
    "cState.SeqNo\022\030\n\020application_info\030\004 \001(\014\032%"
    "\n\005SeqNo\022\013\n\003seq\030\001 \002(\004\022\017\n\007session\030\002 \002(\004\"/\n"
    "\nActionType\022\n\n\006UPDATE\020\000\022\n\n\006DELETE\020\001\022\t\n\005O"
    "THER\020\002\"+\n\014SyncStateMsg\022\033\n\002ss\030\001 \003(\0132\017.Syn"
    "c.SyncState", 291);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "sync-state.proto", &protobuf_RegisterTypes);
  SyncState::default_instance_ = new SyncState();
  SyncState_SeqNo::default_instance_ = new SyncState_SeqNo();
  SyncStateMsg::default_instance_ = new SyncStateMsg();
  SyncState::default_instance_->InitAsDefaultInstance();
  SyncState_SeqNo::default_instance_->InitAsDefaultInstance();
  SyncStateMsg::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_sync_2dstate_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_sync_2dstate_2eproto {
  StaticDescriptorInitializer_sync_2dstate_2eproto() {
    protobuf_AddDesc_sync_2dstate_2eproto();
  }
} static_descriptor_initializer_sync_2dstate_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* SyncState_ActionType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SyncState_ActionType_descriptor_;
}
bool SyncState_ActionType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SyncState_ActionType SyncState::UPDATE;
const SyncState_ActionType SyncState::DELETE;
const SyncState_ActionType SyncState::OTHER;
const SyncState_ActionType SyncState::ActionType_MIN;
const SyncState_ActionType SyncState::ActionType_MAX;
const int SyncState::ActionType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SyncState_SeqNo::kSeqFieldNumber;
const int SyncState_SeqNo::kSessionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SyncState_SeqNo::SyncState_SeqNo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Sync.SyncState.SeqNo)
}

void SyncState_SeqNo::InitAsDefaultInstance() {
}

SyncState_SeqNo::SyncState_SeqNo(const SyncState_SeqNo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Sync.SyncState.SeqNo)
}

void SyncState_SeqNo::SharedCtor() {
  _cached_size_ = 0;
  seq_ = GOOGLE_ULONGLONG(0);
  session_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SyncState_SeqNo::~SyncState_SeqNo() {
  // @@protoc_insertion_point(destructor:Sync.SyncState.SeqNo)
  SharedDtor();
}

void SyncState_SeqNo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SyncState_SeqNo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncState_SeqNo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SyncState_SeqNo_descriptor_;
}

const SyncState_SeqNo& SyncState_SeqNo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sync_2dstate_2eproto();
  return *default_instance_;
}

SyncState_SeqNo* SyncState_SeqNo::default_instance_ = NULL;

SyncState_SeqNo* SyncState_SeqNo::New(::google::protobuf::Arena* arena) const {
  SyncState_SeqNo* n = new SyncState_SeqNo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SyncState_SeqNo::Clear() {
// @@protoc_insertion_point(message_clear_start:Sync.SyncState.SeqNo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SyncState_SeqNo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SyncState_SeqNo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(seq_, session_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SyncState_SeqNo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Sync.SyncState.SeqNo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 seq = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &seq_)));
          set_has_seq();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_session;
        break;
      }

      // required uint64 session = 2;
      case 2: {
        if (tag == 16) {
         parse_session:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &session_)));
          set_has_session();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Sync.SyncState.SeqNo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Sync.SyncState.SeqNo)
  return false;
#undef DO_
}

void SyncState_SeqNo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Sync.SyncState.SeqNo)
  // required uint64 seq = 1;
  if (has_seq()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->seq(), output);
  }

  // required uint64 session = 2;
  if (has_session()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->session(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Sync.SyncState.SeqNo)
}

::google::protobuf::uint8* SyncState_SeqNo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Sync.SyncState.SeqNo)
  // required uint64 seq = 1;
  if (has_seq()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->seq(), target);
  }

  // required uint64 session = 2;
  if (has_session()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->session(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Sync.SyncState.SeqNo)
  return target;
}

int SyncState_SeqNo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Sync.SyncState.SeqNo)
  int total_size = 0;

  if (has_seq()) {
    // required uint64 seq = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->seq());
  }

  if (has_session()) {
    // required uint64 session = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->session());
  }

  return total_size;
}
int SyncState_SeqNo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Sync.SyncState.SeqNo)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 seq = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->seq());

    // required uint64 session = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->session());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncState_SeqNo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Sync.SyncState.SeqNo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SyncState_SeqNo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SyncState_SeqNo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Sync.SyncState.SeqNo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Sync.SyncState.SeqNo)
    MergeFrom(*source);
  }
}

void SyncState_SeqNo::MergeFrom(const SyncState_SeqNo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Sync.SyncState.SeqNo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_seq()) {
      set_seq(from.seq());
    }
    if (from.has_session()) {
      set_session(from.session());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SyncState_SeqNo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Sync.SyncState.SeqNo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncState_SeqNo::CopyFrom(const SyncState_SeqNo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Sync.SyncState.SeqNo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncState_SeqNo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void SyncState_SeqNo::Swap(SyncState_SeqNo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SyncState_SeqNo::InternalSwap(SyncState_SeqNo* other) {
  std::swap(seq_, other->seq_);
  std::swap(session_, other->session_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SyncState_SeqNo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SyncState_SeqNo_descriptor_;
  metadata.reflection = SyncState_SeqNo_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SyncState::kNameFieldNumber;
const int SyncState::kTypeFieldNumber;
const int SyncState::kSeqnoFieldNumber;
const int SyncState::kApplicationInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SyncState::SyncState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Sync.SyncState)
}

void SyncState::InitAsDefaultInstance() {
  seqno_ = const_cast< ::Sync::SyncState_SeqNo*>(&::Sync::SyncState_SeqNo::default_instance());
}

SyncState::SyncState(const SyncState& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Sync.SyncState)
}

void SyncState::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  seqno_ = NULL;
  application_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SyncState::~SyncState() {
  // @@protoc_insertion_point(destructor:Sync.SyncState)
  SharedDtor();
}

void SyncState::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  application_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete seqno_;
  }
}

void SyncState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncState::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SyncState_descriptor_;
}

const SyncState& SyncState::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sync_2dstate_2eproto();
  return *default_instance_;
}

SyncState* SyncState::default_instance_ = NULL;

SyncState* SyncState::New(::google::protobuf::Arena* arena) const {
  SyncState* n = new SyncState;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SyncState::Clear() {
// @@protoc_insertion_point(message_clear_start:Sync.SyncState)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    type_ = 0;
    if (has_seqno()) {
      if (seqno_ != NULL) seqno_->::Sync::SyncState_SeqNo::Clear();
    }
    if (has_application_info()) {
      application_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SyncState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Sync.SyncState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Sync.SyncState.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // required .Sync.SyncState.ActionType type = 2;
      case 2: {
        if (tag == 16) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Sync::SyncState_ActionType_IsValid(value)) {
            set_type(static_cast< ::Sync::SyncState_ActionType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_seqno;
        break;
      }

      // optional .Sync.SyncState.SeqNo seqno = 3;
      case 3: {
        if (tag == 26) {
         parse_seqno:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_seqno()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_application_info;
        break;
      }

      // optional bytes application_info = 4;
      case 4: {
        if (tag == 34) {
         parse_application_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_application_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Sync.SyncState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Sync.SyncState)
  return false;
#undef DO_
}

void SyncState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Sync.SyncState)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Sync.SyncState.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required .Sync.SyncState.ActionType type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // optional .Sync.SyncState.SeqNo seqno = 3;
  if (has_seqno()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->seqno_, output);
  }

  // optional bytes application_info = 4;
  if (has_application_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->application_info(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Sync.SyncState)
}

::google::protobuf::uint8* SyncState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Sync.SyncState)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Sync.SyncState.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required .Sync.SyncState.ActionType type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // optional .Sync.SyncState.SeqNo seqno = 3;
  if (has_seqno()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->seqno_, false, target);
  }

  // optional bytes application_info = 4;
  if (has_application_info()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->application_info(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Sync.SyncState)
  return target;
}

int SyncState::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Sync.SyncState)
  int total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_type()) {
    // required .Sync.SyncState.ActionType type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  return total_size;
}
int SyncState::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Sync.SyncState)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required .Sync.SyncState.ActionType type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[2 / 32] & 12u) {
    // optional .Sync.SyncState.SeqNo seqno = 3;
    if (has_seqno()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->seqno_);
    }

    // optional bytes application_info = 4;
    if (has_application_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->application_info());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Sync.SyncState)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SyncState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SyncState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Sync.SyncState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Sync.SyncState)
    MergeFrom(*source);
  }
}

void SyncState::MergeFrom(const SyncState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Sync.SyncState)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_seqno()) {
      mutable_seqno()->::Sync::SyncState_SeqNo::MergeFrom(from.seqno());
    }
    if (from.has_application_info()) {
      set_has_application_info();
      application_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.application_info_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SyncState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Sync.SyncState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncState::CopyFrom(const SyncState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Sync.SyncState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncState::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_seqno()) {
    if (!this->seqno_->IsInitialized()) return false;
  }
  return true;
}

void SyncState::Swap(SyncState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SyncState::InternalSwap(SyncState* other) {
  name_.Swap(&other->name_);
  std::swap(type_, other->type_);
  std::swap(seqno_, other->seqno_);
  application_info_.Swap(&other->application_info_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SyncState::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SyncState_descriptor_;
  metadata.reflection = SyncState_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SyncState_SeqNo

// required uint64 seq = 1;
bool SyncState_SeqNo::has_seq() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SyncState_SeqNo::set_has_seq() {
  _has_bits_[0] |= 0x00000001u;
}
void SyncState_SeqNo::clear_has_seq() {
  _has_bits_[0] &= ~0x00000001u;
}
void SyncState_SeqNo::clear_seq() {
  seq_ = GOOGLE_ULONGLONG(0);
  clear_has_seq();
}
 ::google::protobuf::uint64 SyncState_SeqNo::seq() const {
  // @@protoc_insertion_point(field_get:Sync.SyncState.SeqNo.seq)
  return seq_;
}
 void SyncState_SeqNo::set_seq(::google::protobuf::uint64 value) {
  set_has_seq();
  seq_ = value;
  // @@protoc_insertion_point(field_set:Sync.SyncState.SeqNo.seq)
}

// required uint64 session = 2;
bool SyncState_SeqNo::has_session() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SyncState_SeqNo::set_has_session() {
  _has_bits_[0] |= 0x00000002u;
}
void SyncState_SeqNo::clear_has_session() {
  _has_bits_[0] &= ~0x00000002u;
}
void SyncState_SeqNo::clear_session() {
  session_ = GOOGLE_ULONGLONG(0);
  clear_has_session();
}
 ::google::protobuf::uint64 SyncState_SeqNo::session() const {
  // @@protoc_insertion_point(field_get:Sync.SyncState.SeqNo.session)
  return session_;
}
 void SyncState_SeqNo::set_session(::google::protobuf::uint64 value) {
  set_has_session();
  session_ = value;
  // @@protoc_insertion_point(field_set:Sync.SyncState.SeqNo.session)
}

// -------------------------------------------------------------------

// SyncState

// required string name = 1;
bool SyncState::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SyncState::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void SyncState::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void SyncState::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& SyncState::name() const {
  // @@protoc_insertion_point(field_get:Sync.SyncState.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SyncState::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Sync.SyncState.name)
}
 void SyncState::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Sync.SyncState.name)
}
 void SyncState::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Sync.SyncState.name)
}
 ::std::string* SyncState::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:Sync.SyncState.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SyncState::release_name() {
  // @@protoc_insertion_point(field_release:Sync.SyncState.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SyncState::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Sync.SyncState.name)
}

// required .Sync.SyncState.ActionType type = 2;
bool SyncState::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SyncState::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
void SyncState::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void SyncState::clear_type() {
  type_ = 0;
  clear_has_type();
}
 ::Sync::SyncState_ActionType SyncState::type() const {
  // @@protoc_insertion_point(field_get:Sync.SyncState.type)
  return static_cast< ::Sync::SyncState_ActionType >(type_);
}
 void SyncState::set_type(::Sync::SyncState_ActionType value) {
  assert(::Sync::SyncState_ActionType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Sync.SyncState.type)
}

// optional .Sync.SyncState.SeqNo seqno = 3;
bool SyncState::has_seqno() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SyncState::set_has_seqno() {
  _has_bits_[0] |= 0x00000004u;
}
void SyncState::clear_has_seqno() {
  _has_bits_[0] &= ~0x00000004u;
}
void SyncState::clear_seqno() {
  if (seqno_ != NULL) seqno_->::Sync::SyncState_SeqNo::Clear();
  clear_has_seqno();
}
const ::Sync::SyncState_SeqNo& SyncState::seqno() const {
  // @@protoc_insertion_point(field_get:Sync.SyncState.seqno)
  return seqno_ != NULL ? *seqno_ : *default_instance_->seqno_;
}
::Sync::SyncState_SeqNo* SyncState::mutable_seqno() {
  set_has_seqno();
  if (seqno_ == NULL) {
    seqno_ = new ::Sync::SyncState_SeqNo;
  }
  // @@protoc_insertion_point(field_mutable:Sync.SyncState.seqno)
  return seqno_;
}
::Sync::SyncState_SeqNo* SyncState::release_seqno() {
  // @@protoc_insertion_point(field_release:Sync.SyncState.seqno)
  clear_has_seqno();
  ::Sync::SyncState_SeqNo* temp = seqno_;
  seqno_ = NULL;
  return temp;
}
void SyncState::set_allocated_seqno(::Sync::SyncState_SeqNo* seqno) {
  delete seqno_;
  seqno_ = seqno;
  if (seqno) {
    set_has_seqno();
  } else {
    clear_has_seqno();
  }
  // @@protoc_insertion_point(field_set_allocated:Sync.SyncState.seqno)
}

// optional bytes application_info = 4;
bool SyncState::has_application_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SyncState::set_has_application_info() {
  _has_bits_[0] |= 0x00000008u;
}
void SyncState::clear_has_application_info() {
  _has_bits_[0] &= ~0x00000008u;
}
void SyncState::clear_application_info() {
  application_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_application_info();
}
 const ::std::string& SyncState::application_info() const {
  // @@protoc_insertion_point(field_get:Sync.SyncState.application_info)
  return application_info_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SyncState::set_application_info(const ::std::string& value) {
  set_has_application_info();
  application_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Sync.SyncState.application_info)
}
 void SyncState::set_application_info(const char* value) {
  set_has_application_info();
  application_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Sync.SyncState.application_info)
}
 void SyncState::set_application_info(const void* value, size_t size) {
  set_has_application_info();
  application_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Sync.SyncState.application_info)
}
 ::std::string* SyncState::mutable_application_info() {
  set_has_application_info();
  // @@protoc_insertion_point(field_mutable:Sync.SyncState.application_info)
  return application_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SyncState::release_application_info() {
  // @@protoc_insertion_point(field_release:Sync.SyncState.application_info)
  clear_has_application_info();
  return application_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SyncState::set_allocated_application_info(::std::string* application_info) {
  if (application_info != NULL) {
    set_has_application_info();
  } else {
    clear_has_application_info();
  }
  application_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), application_info);
  // @@protoc_insertion_point(field_set_allocated:Sync.SyncState.application_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SyncStateMsg::kSsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SyncStateMsg::SyncStateMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Sync.SyncStateMsg)
}

void SyncStateMsg::InitAsDefaultInstance() {
}

SyncStateMsg::SyncStateMsg(const SyncStateMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Sync.SyncStateMsg)
}

void SyncStateMsg::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SyncStateMsg::~SyncStateMsg() {
  // @@protoc_insertion_point(destructor:Sync.SyncStateMsg)
  SharedDtor();
}

void SyncStateMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SyncStateMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncStateMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SyncStateMsg_descriptor_;
}

const SyncStateMsg& SyncStateMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sync_2dstate_2eproto();
  return *default_instance_;
}

SyncStateMsg* SyncStateMsg::default_instance_ = NULL;

SyncStateMsg* SyncStateMsg::New(::google::protobuf::Arena* arena) const {
  SyncStateMsg* n = new SyncStateMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SyncStateMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:Sync.SyncStateMsg)
  ss_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SyncStateMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Sync.SyncStateMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Sync.SyncState ss = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_ss:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_ss()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_ss;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Sync.SyncStateMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Sync.SyncStateMsg)
  return false;
#undef DO_
}

void SyncStateMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Sync.SyncStateMsg)
  // repeated .Sync.SyncState ss = 1;
  for (unsigned int i = 0, n = this->ss_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->ss(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Sync.SyncStateMsg)
}

::google::protobuf::uint8* SyncStateMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Sync.SyncStateMsg)
  // repeated .Sync.SyncState ss = 1;
  for (unsigned int i = 0, n = this->ss_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->ss(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Sync.SyncStateMsg)
  return target;
}

int SyncStateMsg::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Sync.SyncStateMsg)
  int total_size = 0;

  // repeated .Sync.SyncState ss = 1;
  total_size += 1 * this->ss_size();
  for (int i = 0; i < this->ss_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->ss(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncStateMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Sync.SyncStateMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SyncStateMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SyncStateMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Sync.SyncStateMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Sync.SyncStateMsg)
    MergeFrom(*source);
  }
}

void SyncStateMsg::MergeFrom(const SyncStateMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Sync.SyncStateMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  ss_.MergeFrom(from.ss_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SyncStateMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Sync.SyncStateMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncStateMsg::CopyFrom(const SyncStateMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Sync.SyncStateMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncStateMsg::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->ss())) return false;
  return true;
}

void SyncStateMsg::Swap(SyncStateMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SyncStateMsg::InternalSwap(SyncStateMsg* other) {
  ss_.UnsafeArenaSwap(&other->ss_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SyncStateMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SyncStateMsg_descriptor_;
  metadata.reflection = SyncStateMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SyncStateMsg

// repeated .Sync.SyncState ss = 1;
int SyncStateMsg::ss_size() const {
  return ss_.size();
}
void SyncStateMsg::clear_ss() {
  ss_.Clear();
}
const ::Sync::SyncState& SyncStateMsg::ss(int index) const {
  // @@protoc_insertion_point(field_get:Sync.SyncStateMsg.ss)
  return ss_.Get(index);
}
::Sync::SyncState* SyncStateMsg::mutable_ss(int index) {
  // @@protoc_insertion_point(field_mutable:Sync.SyncStateMsg.ss)
  return ss_.Mutable(index);
}
::Sync::SyncState* SyncStateMsg::add_ss() {
  // @@protoc_insertion_point(field_add:Sync.SyncStateMsg.ss)
  return ss_.Add();
}
::google::protobuf::RepeatedPtrField< ::Sync::SyncState >*
SyncStateMsg::mutable_ss() {
  // @@protoc_insertion_point(field_mutable_list:Sync.SyncStateMsg.ss)
  return &ss_;
}
const ::google::protobuf::RepeatedPtrField< ::Sync::SyncState >&
SyncStateMsg::ss() const {
  // @@protoc_insertion_point(field_list:Sync.SyncStateMsg.ss)
  return ss_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Sync

// @@protoc_insertion_point(global_scope)

#endif // GOOGLE_PROTOBUF_VERSION < 3000000

#endif // NDN_CPP_HAVE_PROTOBUF
